{"version":3,"file":"index.esm.js","sources":["../src/model.ts","../src/generate/badges.ts","../src/helpers.ts","../src/check-links/check-links.ts","../src/generate/templates.ts","../src/generate/generators.ts","../src/config.ts","../src/generate/generate.ts","../src/run.ts","../src/cli.ts"],"sourcesContent":["// import { WcaCliConfig } from \"web-component-analyzer\";\n\nimport { WcaCliConfig } from \"web-component-analyzer\";\n\nexport enum LineColor {\n\tAQUA = \"aqua\",\n\tCLOUDY = \"cloudy\",\n\tCOLORED = \"colored\",\n\tCUT = \"cut\",\n\tDARK = \"dark\",\n\tFIRE = \"fire\",\n\tGRASS = \"grass\",\n\tRAINBOW = \"rainbow\",\n\tSOLAR = \"solar\",\n\tVINTAGE = \"vintage\",\n\tWATER = \"water\",\n\tNONE = \"none\"\n}\n\nexport interface IBadge {\n\talt: string;\n\turl: string;\n\timg: string;\n}\n\nexport interface IGeneratorParamsError {\n\terror: string;\n}\n\nexport interface IUserTemplate {\n\tname: string;\n\ttemplate: string;\n\tparams?: Params;\n}\n\nexport type PlaceholderSyntax = [string, string];\n\n// export interface IConfig {\n// \tlineBreak: string;\n// \ttab: string;\n// \tblueprintName: string;\n// \tpkgName: string;\n// \toutputName: string;\n// \tplaceholder: PlaceholderSyntax;\n// \tdry: boolean;\n// \tsilent: boolean;\n// \tline: LineColor;\n// \tgenerators: IGenerator<Params>[];\n// \ttemplates: IUserTemplate[];\n// }\n\nexport interface IConfig {\n\tinput: string\n\toutput: string;\n\tpackage: string;\n\thelp: boolean;\n\ttext?: string;\n\tdemo?: string;\n\tlineBreak: string;\n\tcheckLinks: boolean;\n\ttab: string;\n\tsilent: boolean;\n\tdry: boolean;\n\tlogo?: ILogo;\n\tplaceholder: PlaceholderSyntax;\n\tline: LineColor;\n\ttemplates?: IUserTemplate[];\n\theadingPrefix: {[key: number]: string}\n\tbadges?: IBadge[];\n\tcontributorsPerRow: number;\n\tpkg: IPackage;\n\tdocumentationConfig: WcaCliConfig;\n\textend?: string;\n}\n\nexport interface IPackage {\n\tname?: string;\n\tcontributors?: IContributor[];\n\tlicense?: License;\n}\n\nexport interface IGeneratorArgs {\n\tconfig: IConfig;\n\tblueprint: string;\n\tconfigPath: string;\n\tgenerateReadme: GenerateReadmeFunction;\n}\n\nexport type Params = {[key: string]: string} | {optional?: {[key: string]: string}}\nexport type GenerateReadmeFunction = ({config, blueprint, generators, configPath}: {config: IConfig, blueprint: string, generators: IGenerator<any>[], configPath: string}) => Promise<string>;\n\nexport interface IGeneratorParamsArgs extends IGeneratorArgs {\n\tmatch: RegExpMatchArray;\n}\n\nexport interface IGenerator<T> {\n\tname: string;\n\tregex: (args: IGeneratorArgs) => RegExp;\n\ttemplate: (args: T) => string | Promise<string>;\n\tparams?: Params | ((args: IGeneratorParamsArgs) => T | IGeneratorParamsError | Promise<T | IGeneratorParamsError>);\n}\n\nexport interface ILogo {\n\tsrc: string;\n\talt?: string;\n\twidth?: number;\n\theight?: number;\n}\n\nexport interface IContributor {\n\tname: string;\n\turl?: string;\n\temail?: string;\n\timg?: string;\n\tinfo?: string[];\n}\n\nexport type Options = {[key: string]: any};\n\nexport type Bullet = string;\nexport type License = string;\n\nexport type LoadTemplateArgs = {content: string; generateReadme: GenerateReadmeFunction; configPath: string; config: IConfig};\nexport type LogoTemplateArgs = {logo: ILogo};\nexport type LineTemplateArgs = {config: IConfig};\nexport type TitleTemplateArgs = {title: string; level: number; config: IConfig};\nexport type MainTitleTemplateArgs = {name: string};\nexport type BadgesTemplateArgs = {badges: IBadge[]; config: IConfig};\nexport type DocumentationTemplateArgs = {glob: string; config: IConfig};\nexport type DescriptionTemplateArgs = {description: string; text?: string; demo?: string};\nexport type BulletsTemplateArgs = {bullets: Bullet[]; config: IConfig};\nexport type TableTemplateArgs = {rows: string[][]; config: IConfig, centered?: boolean};\nexport type TableOfContentsTemplateArgs = {titles: string[]; config: IConfig};\nexport type ContributorsTemplateArgs = {contributors: IContributor[]; config: IConfig};\nexport type LicenseTemplateArgs = {license: License};\nexport type DemoTemplateArgs = {url: string};","import { IBadge } from \"../model\";\n\n/**\n * Generate npm badges.\n * @param npmId\n */\nexport function npmBadges ({npmId}: {npmId: string}): IBadge[] {\n\treturn [\n\t\t{\n\t\t\t\"alt\": \"Downloads per month\",\n\t\t\t\"url\": `https://npmcharts.com/compare/${npmId}?minimal=true`,\n\t\t\t\"img\": `https://img.shields.io/npm/dm/${npmId}.svg`\n\t\t},\n\t\t{\n\t\t\t\"alt\": \"NPM Version\",\n\t\t\t\"url\": `https://www.npmjs.com/package/${npmId}`,\n\t\t\t\"img\": `https://img.shields.io/npm/v/${npmId}.svg`\n\t\t}\n\t]\n}\n\n/**\n * Generate github badges.\n * @param githubId\n */\nexport function githubBadges ({githubId}: {githubId: string}): IBadge[] {\n\treturn [\n\t\t{\n\t\t\t\"alt\": \"Dependencies\",\n\t\t\t\"url\": `https://david-dm.org/${githubId}`,\n\t\t\t\"img\": `https://img.shields.io/david/${githubId}.svg`\n\t\t},\n\t\t{\n\t\t\t\"alt\": \"Contributors\",\n\t\t\t\"url\": `https://github.com/${githubId}/graphs/contributors`,\n\t\t\t\"img\": `https://img.shields.io/github/contributors/${githubId}.svg`\n\t\t}\n\t]\n}\n\n/**\n * Generates the webcomponents badges.\n * @param webcomponentsId\n */\nexport function webcomponentsBadges ({webcomponentsId}: {webcomponentsId: string}): IBadge[] {\n\treturn [\n\t\t{\n\t\t\t\"alt\": \"Published on webcomponents.org\",\n\t\t\t\"url\": `https://www.webcomponents.org/element/${webcomponentsId}`,\n\t\t\t\"img\": `https://img.shields.io/badge/webcomponents.org-published-blue.svg`\n\t\t}\n\t]\n}","import { green, red } from \"colors\";\nimport { existsSync, outputFile, readFileSync } from \"fs-extra\";\nimport { resolve } from \"path\";\nimport { githubBadges, npmBadges, webcomponentsBadges } from \"./generate/badges\";\nimport checkLinks from \"check-links\";\nimport { IBadge, IConfig, IPackage } from \"./model\";\n\nexport const URL_PATTERN = /^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!10(?:\\.\\d{1,3}){3})(?!127(?:\\.​\\d{1,3}){3})(?!169\\.254(?:\\.\\d{1,3}){2})(?!192\\.168(?:\\.\\d{1,3}){2})(?!172\\.(?:1[​6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1​,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00​a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u​00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/[^\\s]*)?$/i;\n\n/**\n * Returns whether the URL is valid.\n * @param url\n */\nexport function isValidURL (url: string): boolean {\n\treturn URL_PATTERN.test(url);\n}\n\n/**\n * Determines whether an object has the specified key.\n * @param obj\n * @param key\n */\nexport function hasKey (obj: Object, key: string): boolean {\n\treturn getValue(obj, key) != null;\n}\n\n/**\n * Returns the license url.\n * @param license\n */\nexport function getLicenseUrl (license: string): string {\n\treturn `https://opensource.org/licenses/${license}`;\n}\n\n/**\n * Returns a key from from an object for a key path.\n * @param obj\n * @param keyPath\n */\nexport function getValue<T> (obj: {[key: string]: any}, keyPath: string): T | null {\n\tlet keys = keyPath.split(\".\");\n\twhile (keys.length > 0 && obj != null) {\n\t\tkeyPath = keys.shift()!;\n\t\tobj = obj[keyPath];\n\t}\n\n\treturn <T | null>obj;\n}\n\n/**\n * Sets a value for a key path (\".\")\n * @param obj\n * @param keyPath\n * @param value\n */\nexport function setValue<T> (obj: any, keyPath: string, value: T) {\n\tlet keys = keyPath.split(\".\");\n\twhile (keys.length > 0) {\n\n\t\t// Set value for the last key\n\t\tif (keys.length === 1) {\n\t\t\tobj[keys.shift()!] = value;\n\t\t\treturn;\n\t\t}\n\n\t\tconst key = keys.shift()!;\n\t\tif (obj[key] != null) {\n\t\t\tobj = obj[key];\n\t\t} else {\n\t\t\tobj = (obj[key] = {});\n\t\t}\n\t}\n}\n\n/**\n * Validates the package.\n * @param obj\n * @param fileName\n */\nexport function validateObject ({obj, requiredFields}: {obj: Object, requiredFields: string[]}): boolean {\n\tfor (const key of requiredFields) {\n\t\tif (!hasKey(obj, key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * Returns whether the func is a function.\n * @param func\n */\nexport function isFunction (func: unknown): boolean {\n\treturn typeof func === \"function\";\n}\n\n/**\n * Returns whether the obj is an object.\n * @param obj\n */\nexport function isObject (obj: unknown): boolean {\n\tif (obj == null) {\n\t\treturn false;\n\t}\n\n\treturn typeof obj === \"object\" && !Array.isArray(obj);\n}\n\n/**\n * Extracts values from an object.\n * @param map\n * @param obj\n */\nexport function extractValues ({map, obj}: {map: {[key: string]: any}, obj: Object}) {\n\tconst newObj = {};\n\tfor (const [k, v] of (<any>Object).entries(map)) {\n\t\t(<any>newObj)[k] = getValue(obj, v);\n\t}\n\n\treturn newObj;\n}\n\n/**\n * Returns available badges.\n * @param pkg\n */\nexport function getBadges ({config}: {config: IConfig}): IBadge[] {\n\tconst badges: IBadge[] = [];\n\n\tconst npmId = getValue<string>(config, \"ids.npm\");\n\tconst githubId = getValue<string>(config, \"ids.github\");\n\tconst webcomponentsId = getValue<string>(config, \"ids.webcomponents\");\n\n\t// Add NPM badges\n\tif (npmId != null) {\n\t\tbadges.push(...npmBadges({npmId}));\n\t}\n\n\t// Add Github badges\n\tif (githubId != null) {\n\t\tbadges.push(...githubBadges({githubId}));\n\t}\n\n\t// Add webcomponents badges\n\tif (webcomponentsId != null) {\n\t\tbadges.push(...webcomponentsBadges({webcomponentsId}));\n\t}\n\n\t// Add user badges\n\tbadges.push(...(config.badges || []));\n\n\treturn badges;\n}\n\n/**\n * Reads a file.\n * @param name\n */\nexport function readFile (name: string): string | null {\n\n\t// Checks whether the file exists\n\tif (!fileExists(name)) {\n\t\treturn null;\n\t}\n\n\treturn readFileSync(resolve(process.cwd(), name)).toString(\"utf8\");\n}\n\n/**\n * Reads the contents of a json file.\n * @param name\n */\nexport function readJSONFile (name: string): Object | null {\n\tconst file = readFile(name);\n\treturn file != null ? JSON.parse(file) : file;\n}\n\n/**\n * Escapes a regex.\n * @param text\n */\nexport function escapeRegex (text: string): string {\n\treturn text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n}\n\n/**\n * Returns a placeholder regex.\n * @param text\n */\nexport function placeholderRegexCallback (text: string): (({config}: {config: IConfig}) => RegExp) {\n\treturn (({config}: {config: IConfig}) => {\n\t\tconst {placeholder} = config;\n\t\treturn new RegExp(`${escapeRegex(placeholder[0])}\\\\s*(${text})\\\\s*${escapeRegex(placeholder[1])}`, \"gm\");\n\t});\n}\n\n/**\n * Writes a file to a path.\n * @param target\n * @param content\n */\nexport async function writeFile ({target, content}: {target: string, content: string}) {\n\ttry {\n\t\tawait outputFile(target, content);\n\t} catch (err) {\n\t\tconsole.error(err);\n\t}\n}\n\n/**\n * Returns the title for a level.\n * @param title\n * @param level\n * @param config\n */\nexport function getTitle ({title, level, config}: {title: string, level: number, config: IConfig}): string {\n\tconst prefix = config.headingPrefix[level] || \"\";\n\treturn `${prefix}${title}`;\n}\n\n/**\n * Cleans the title from weird symbols.\n * @param title\n */\nexport function getCleanTitle (title: string): string {\n\treturn title.replace(/[^a-zA-Z0-9-_ ]/g, \"\");\n}\n\n/**\n * Returns the title link.\n * @param title\n * @param index\n */\nexport function getTitleLink (title: string, index: number = 0): string {\n\treturn `#${getCleanTitle(title).replace(/ /g, \"-\").toLowerCase()}${index > 0 ? `-${index}` : \"\"}`;\n}\n\n/**\n * Determines whether the file at the path exists.\n * @param absolutePath\n */\nexport function fileExists (absolutePath: string): boolean {\n\tif (absolutePath == null || absolutePath == \"\") return false;\n\treturn existsSync(absolutePath);\n}\n\n/**\n * Splits an array into smaller arrays.\n * @param arr\n * @param count\n */\nexport function splitArrayIntoArrays<T> (arr: T[], count: number): T[][] {\n\tarr = [...arr];\n\tconst arrs: T[][] = [];\n\twhile (arr.length) {\n\t\tarrs.push(arr.splice(0, count));\n\t}\n\n\treturn arrs;\n}\n\n/**\n * Replaces content in string between two indicies.\n * @param string\n * @param start\n * @param end\n * @param content\n */\nexport function replaceInString (string: string, content: string, {start, end}: {start: number, end: number}): string {\n\treturn string.substring(0, start) + content + string.substring(end);\n}\n\n/**\n * Loads the package file.\n * @param pkgPath\n */\nexport function loadPackage (pkgPath: string): IPackage | null {\n\treturn <IPackage>readJSONFile(pkgPath) || null;\n}\n\n/**\n * Loads the config file.\n * @param configPath\n */\nexport function loadConfig (configPath: string): IConfig | null {\n\treturn <IConfig>readJSONFile(configPath) || null;\n}\n\n/**\n * Returns links from a text.\n * @param text\n */\nexport function getLinks (text: string): string[] {\n\treturn Array.from(text.match(/(http|www)[A-Za-z\\d-\\._~:\\/?#\\[\\]@!\\$&\\+;=]+/gm) || []);\n}\n\n/**\n * Checks all links in the text for aliveness.\n * @param text\n */\nexport async function checkLinksAliveness (text: string) {\n\tconst links = getLinks(text);\n\tconsole.log(green(`[readme] - Found \"${links.length}\" link${links.length === 1 ? \"\" : `s`}. Checking all of them now!`));\n\n\t// Check all links\n\tconst results = await checkLinks(links);\n\n\t// Go through the results and notify the user about broken links\n\tfor (const [link, {status, statusCode}] of Object.entries(results)) {\n\t\tif (status === \"dead\") {\n\t\t\tconsole.log(red(`[readme] - The link \"${link}\" is dead. Responded with status code \"${statusCode}\".`));\n\t\t}\n\t}\n}\n","import { red } from \"colors\";\nimport * as linksCheck from \"check-links\";\nimport { checkLinksAliveness, getValue, readFile } from \"../helpers\";\nimport { Options } from \"../model\";\nimport {resolve} from \"path\";\n\n/**\n * Runs the check links command.\n * @param options\n */\nexport async function checkLinksCommand (options: Options) {\n\tconst path = getValue<string>(options, \"input\");\n\n\t// Ensure that a path exists\n\tif (path == null) {\n\t\tconsole.log(red(`[readme] - Could not resolve '${path}'.`));\n\t\treturn;\n\t}\n\n\tconst content = readFile(path);\n\n\t// Ensure that the file could be read\n\tif (content == null) {\n\t\tconsole.log(red(`[readme] - Could not read the file at path '${path}'.`));\n\t\treturn;\n\t}\n\n\tawait checkLinksAliveness(content);\n}\n","import { AnalyzeCliCommand } from \"web-component-analyzer\";\nimport { getCleanTitle, getLicenseUrl, getTitle, getTitleLink, isValidURL, splitArrayIntoArrays } from \"../helpers\";\nimport { BadgesTemplateArgs, BulletsTemplateArgs, ContributorsTemplateArgs, DemoTemplateArgs, DescriptionTemplateArgs, DocumentationTemplateArgs, LicenseTemplateArgs, LineColor, LineTemplateArgs, LogoTemplateArgs, MainTitleTemplateArgs, TableOfContentsTemplateArgs, TableTemplateArgs, TitleTemplateArgs } from \"../model\";\n\n/**\n * Creates the template for the logo.\n * @param logo\n */\nexport function logoTemplate ({logo}: LogoTemplateArgs): string {\n\tconst {src, width = \"auto\", height = \"auto\", alt = \"Logo\"} = logo;\n\treturn `<p align=\"center\">\n  <img src=\"${src}\" alt=\"${alt}\" width=\"${width}\" height=\"${height}\" />\n</p>`;\n}\n\n/**\n * Creates the template for the title.\n * @param name\n */\nexport function mainTitleTemplate ({name}: MainTitleTemplateArgs): string {\n\treturn `<h1 align=\"center\">${name}</h1>`;\n}\n\n/**\n * Creates a line template.\n * @param config\n */\nexport function lineTemplate ({config}: LineTemplateArgs) {\n\tlet url = \"\";\n\tconst {line} = config;\n\n\t// If the line should not be there we just return an empty string.\n\tif (line === LineColor.NONE) {\n\t\treturn ``;\n\t}\n\n\t// Construct the URL.\n\tif (isValidURL(line)) {\n\t\turl = line;\n\t} else {\n\t\turl = `https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/${line}.png`;\n\t}\n\n\treturn `![-----------------------------------------------------](${url})`;\n}\n\n/**\n * Creates a template for the title.\n * @param title\n * @param level\n * @param config\n */\nexport function titleTemplate ({title, level, config}: TitleTemplateArgs) {\n\tconst beforeTitleContent = level <= 2 ? `${config.lineBreak}[${lineTemplate({config})}](${getTitleLink(title)})${config.lineBreak}${config.lineBreak}` : \"\";\n\treturn `${beforeTitleContent}${(<any>Array(level)).fill(\"#\").join(\"\")} ${getTitle({title, level, config})}`;\n}\n\n/**\n * Creates a template for the badges.\n * @param badges\n * @param config\n */\nexport function badgesTemplate ({badges, config}: BadgesTemplateArgs): string {\n\treturn `<p align=\"center\">\n\t\t${badges.map(badge => `<a href=\"${badge.url}\"><img alt=\"${badge.alt}\" src=\"${badge.img}\" height=\"20\"/></a>`)\n\t            .join(config.lineBreak)}\n\t</p>\n`;\n}\n\n/**\n * Creates a template for the license.\n * @param license\n * @returns {string}\n */\nexport function licenseTemplate ({license}: LicenseTemplateArgs) {\n\treturn `## License\n\t\nLicensed under [${license}](${getLicenseUrl(license)}).`;\n}\n\n/**\n * Creates a template for the demo link.\n * @param url\n */\nexport function demoTemplate ({url}: DemoTemplateArgs) {\n\treturn `Go here to see a demo <a href=\"${url}\">${url}</a>.`;\n}\n\n/**\n * Creates a description template.\n * @param description\n * @param text\n * @param demo\n */\nexport function descriptionTemplate ({description, text, demo}: DescriptionTemplateArgs): string {\n\treturn `<p align=\"center\">\n  <b>${description}</b></br>\n  <sub>${text != null ? text : \"\"}${demo != null ? ` ${demoTemplate({url: demo})}` : \"\"}<sub>\n</p>\n\n<br />\n`;\n}\n\n/**\n * Creates a bullets template.\n * @param bullets\n * @param pkg\n */\nexport function bulletsTemplate ({bullets, config}: BulletsTemplateArgs): string {\n\treturn bullets.map(bullet => `* ${bullet}`).join(config.lineBreak);\n}\n\n/**\n * Creates a table template.\n * @param rows\n * @param config\n * @param centered\n */\nexport function tableTemplate ({rows, config, centered}: TableTemplateArgs): string {\n\t/**\n\t * Fills the width of the cell.\n\t * @param text\n\t * @param width\n\t * @param paddingStart\n\t */\n\tfunction fillWidth (text: string, width: number, paddingStart: number): string {\n\t\treturn \" \".repeat(paddingStart) + text + \" \".repeat(Math.max(1, width - text.length - paddingStart));\n\t}\n\n\t/**\n\t * Escape a text so it can be used in a markdown table\n\t * @param text\n\t */\n\tfunction markdownEscapeTableCell(text: string): string {\n\t\treturn text.replace(/\\n/g, \"<br />\").replace(/\\|/g, \"\\\\|\");\n\t}\n\n\t// Filter away the rows that have no content\n\trows = rows.filter(row => row.map(r => r.trim()).join(\"\").length > 0);\n\n\t// Count the amount of columns\n\tconst columnCount = Math.max(...rows.map(r => r.length));\n\n\t// Escape all cells in the markdown output\n\trows = rows.map(r => r.map(markdownEscapeTableCell));\n\n\n\tconst MIN_WIDTH = 3;\n\tconst MAX_WIDTH = 50;\n\tconst PADDING = 1;\n\tconst tableColPrefix = centered ? \":\" : \"\";\n\n\tconst columnWidths = Array(columnCount)\n\t\t.fill(0)\n\t\t.map((c, i) => Math.min(MAX_WIDTH, Math.max(MIN_WIDTH, ...rows.map(r => (r[i] || \"\").length)) + PADDING * 2));\n\n\treturn `\n|${rows[0].map((r, i) => fillWidth(r, columnWidths[i], PADDING)).join(\"|\")}|\n|${columnWidths.map(c => `${tableColPrefix}${\"-\".repeat(c)}${tableColPrefix}`).join(\"|\")}|\n${rows\n\t\t.slice(1)\n\t\t.map(r => `|${r.map((r, i) => fillWidth(r, columnWidths[i], PADDING)).join(\"|\")}|`)\n\t\t.join(config.lineBreak)}\n`;\n}\n\n/**\n * Creates the table of contents.\n * @param titles\n * @param pkg\n */\nexport function tocTemplate ({titles, config}: TableOfContentsTemplateArgs): string {\n\n\t// Create a clean titles array.\n\t// We are going to use it to figure out the index of each title (there might be more titles with the same name).\n\tconst tempCleanTitles = titles.map(title => getCleanTitle(title));\n\n\t// Create a map, mapping each clean title to the amount of times it occurs in the titles array\n\tconst countForTitle: {[key: string]: number} = <any>tempCleanTitles.reduce((acc: {[key: string]: number},\n\t                                                                            title) => {\n\t\tacc[title] = (acc[title] || 0) + 1;\n\t\treturn acc;\n\t}, {});\n\n\t// Map the titles to relevant info.\n\tconst titlesInfo = titles.map(title => {\n\t\tconst cleanTitle = getCleanTitle(title);\n\t\tconst titlesWithSameName = tempCleanTitles.filter(t => t === cleanTitle);\n\n\t\t// Remove title from the temp array and compute the index\n\t\ttempCleanTitles.splice(tempCleanTitles.indexOf(cleanTitle), 1);\n\n\t\t// Compute the index (the first will be 0 and so on)\n\t\tconst index = ((countForTitle[cleanTitle] || 1) - titlesWithSameName.length);\n\n\t\t// Compute the level of the title\n\t\tconst level = (title.match(/#/g) || []).length;\n\n\t\t// Remove the \"# \" from the titles so eg. \"## Hello\" becomes \"Hello\"\n\t\ttitle = title.replace(/^#*\\s?/, \"\");\n\n\t\t// Compute the title link\n\t\tconst titleLink = getTitleLink(title, index);\n\n\t\treturn {title, cleanTitle, index, titleLink, level};\n\t});\n\n\t// Find the lowest level of heading (# is lower than ##)\n\tconst lowestLevel = titlesInfo.reduce((acc, {title, level}) => Math.min(acc, level), Infinity);\n\n\t// Format the table of contents title because it is applied after the title template\n\treturn `${titleTemplate({title: \"Table of Contents\", level: 2, config: config})}\n\n${titlesInfo.map(({level, titleLink, title}) => {\n\t\t// Subtract the lowest level from the level to ensure that the lowest level will have 0 tabs in front\n\t\t// We can't make any assumptions about what level of headings the readme uses.\n\t\tconst tabs = (<any>Array(level - lowestLevel)).fill(config.tab).join(\"\");\n\t\treturn `${tabs}* [${title}](${titleLink})`;\n\t}).join(config.lineBreak)}`;\n}\n\n/**\n * Creates the authors template.\n * @param contributors\n * @param config\n */\nexport function contributorsTemplate ({contributors, config}: ContributorsTemplateArgs): string {\n\tconst {contributorsPerRow} = config;\n\tconst imageSize = 100;\n\n\t// Split the contributors into multiple arrays (one for each row)\n\tconst rows = splitArrayIntoArrays(contributors, contributorsPerRow);\n\n\treturn `## Contributors\n\t\n${rows.map(row => {\n\n\t    // Compile the rows\n\t\tconst imgs = row.map(({img, url, name}) => img != null ? `[<img alt=\"${name}\" src=\"${img}\" width=\"${imageSize}\">](${url})` : \" \");\n\t\tconst names = row.map(({url, email, name}) => `[${name}](${url})`);\n\t\tconst emails = row.map(({url, email}) => email != null ? `[${email}](mailto:${email})` : \"\");\n\n\t\t// Find the maximum amount of info lines for the row!\n\t\tconst maxInfoLinesCount = row.reduce((acc, {info}) => info != null ? Math.max(acc, info.length) : acc, 0);\n\n\t\t// For each line we go through the row and find the correct info\n\t\tconst infos = Array(maxInfoLinesCount).fill(0).map((_, i) => {\n\t\t\treturn row.map(({info}) => info != null && i < info.length ? info[i] : \"\");\n\t\t});\n\n\t\tconst content: string[][] = [\n\t\t\timgs,\n\t\t\tnames,\n\t\t\temails,\n\t\t\t...infos\n\t\t];\n\t\t\n\t\treturn tableTemplate({rows: content, config, centered: true});\n\t}).join(config.lineBreak)}`;\n}\n\n/**\n * Generates documentation for a glob.\n * @param glob\n * @param config\n */\nexport function documentationTemplate ({glob, config}: DocumentationTemplateArgs): Promise<string> {\n\treturn new AnalyzeCliCommand().analyze(glob, config.documentationConfig);\n}\n\n","import { resolve } from \"path\";\nimport { fileExists, getBadges, getValue, isObject, placeholderRegexCallback, readFile } from \"../helpers\";\nimport { BadgesTemplateArgs, ContributorsTemplateArgs, DescriptionTemplateArgs, IGenerator, IGeneratorParamsArgs, IConfig, IUserTemplate, LicenseTemplateArgs, LineTemplateArgs, LoadTemplateArgs, LogoTemplateArgs, MainTitleTemplateArgs, TableOfContentsTemplateArgs, TitleTemplateArgs, DocumentationTemplateArgs } from \"../model\";\nimport { badgesTemplate, bulletsTemplate, contributorsTemplate, descriptionTemplate, documentationTemplate, licenseTemplate, lineTemplate, logoTemplate, mainTitleTemplate, tableTemplate, titleTemplate, tocTemplate } from \"./templates\";\n\n/**\n * Creates a simple template.\n * @param name\n * @param template\n * @param params\n */\nexport function simpleTemplateGenerator ({name, template, params}: IUserTemplate): IGenerator<{}> {\n\treturn {\n\t\tname,\n\t\tregex: placeholderRegexCallback(`template:${name}`),\n\t\ttemplate: () => template,\n\t\tparams\n\t};\n}\n\n/**\n * Loads markdown.\n */\nexport const generateLoad: IGenerator<LoadTemplateArgs> = {\n\tname: \"load\",\n\tregex: placeholderRegexCallback(\"load:(.+?\\.md)\"),\n\ttemplate: ({content, generateReadme, configPath, config}: LoadTemplateArgs) => {\n\t\t// Recursively generate the readme for all the files that are being loaded, but only add the load generator\n\t\t// since all of the generators should only run once.\n\t\treturn generateReadme({config, blueprint: content, configPath, generators: [generateLoad]});\n\t},\n\tparams: ({config, match, generateReadme, configPath}) => {\n\t\tconst absolutePath = resolve(match[2]);\n\n\t\t// Check if file exists\n\t\tif (!fileExists(absolutePath)) {\n\t\t\treturn {error: `the file \"${absolutePath}\" doesn't exist.`};\n\t\t}\n\n\t\t// Read the file\n\t\tconst content = readFile(absolutePath) || \"\";\n\t\treturn {content, generateReadme, configPath, config};\n\t}\n};\n\n/**\n * Generates a logo.\n */\nexport const generateLogo: IGenerator<LogoTemplateArgs> = {\n\tname: \"logo\",\n\tregex: placeholderRegexCallback(\"template:logo\"),\n\ttemplate: logoTemplate,\n\tparams: {\n\t\tlogo: \"logo\",\n\t\tsrc: \"logo.src\"\n\t}\n};\n\n/**\n * Generates a title.\n */\nexport const generateMainTitle: IGenerator<MainTitleTemplateArgs> = {\n\tname: \"main-title\",\n\tregex: placeholderRegexCallback(\"template:title\"),\n\ttemplate: mainTitleTemplate,\n\tparams: {\n\t\tname: \"pkg.name\"\n\t}\n};\n\n/**\n * Generates badges.\n */\nexport const generateBadges: IGenerator<BadgesTemplateArgs> = {\n\tname: \"badges\",\n\tregex: placeholderRegexCallback(\"template:badges\"),\n\ttemplate: badgesTemplate,\n\tparams: ({config}: IGeneratorParamsArgs) => {\n\t\tconst badges = getBadges({config});\n\t\tif (badges.length === 0) {\n\t\t\treturn {error: \"it could not generate any badges\"};\n\t\t}\n\t\treturn {badges, config};\n\t}\n};\n\n/**\n * Generates a description.\n */\nexport const generateDescription: IGenerator<DescriptionTemplateArgs> = {\n\tname: \"description\",\n\tregex: placeholderRegexCallback(\"template:description\"),\n\ttemplate: descriptionTemplate,\n\tparams: {\n\t\tdescription: \"pkg.description\",\n\t\toptional: {\n\t\t\tdemo: \"demo\",\n\t\t\ttext: \"text\"\n\t\t}\n\t}\n};\n\n/**\n * Generates a line.\n */\nexport const generateLine: IGenerator<LineTemplateArgs> = {\n\tname: \"line\",\n\tregex: placeholderRegexCallback(\"template:line\"),\n\ttemplate: lineTemplate\n};\n\n/**\n * Generates contributors.\n */\nexport const generateContributors: IGenerator<ContributorsTemplateArgs> = {\n\tname: \"contributors\",\n\tregex: placeholderRegexCallback(\"template:contributors\"),\n\ttemplate: contributorsTemplate,\n\tparams: {\n\t\tcontributors: \"pkg.contributors\"\n\t}\n};\n\n/**\n * Generates license.\n */\nexport const generateLicense: IGenerator<LicenseTemplateArgs> = {\n\tname: \"license\",\n\tregex: placeholderRegexCallback(\"template:license\"),\n\ttemplate: licenseTemplate,\n\tparams: {\n\t\tlicense: \"pkg.license\"\n\t}\n};\n\n/**\n * Generates the titles.\n */\nexport const generateTitle: IGenerator<TitleTemplateArgs> = {\n\tname: \"title\",\n\tregex: () => /^([#]{1,2}) (.*)$/gm,\n\ttemplate: titleTemplate,\n\tparams: ({config, match}) => {\n\t\tconst hashes = match[1];\n\t\tconst title = match[2];\n\t\treturn {title, level: hashes.length, config};\n\t}\n};\n\n/**\n * Generates the interpolation.\n */\nexport const generateInterpolate: IGenerator<{config: IConfig, text: string}> = {\n\tname: \"interpolate\",\n\tregex: placeholderRegexCallback(`[^\\\\s:]*`),\n\ttemplate: ({config, text}) => {\n\t\tlet value = getValue<string>(config, text);\n\t\tif (value == null) return text;\n\n\t\t// Transform objects into array so they can be transformed into lists\n\t\tif (isObject(value)) {\n\t\t\tvalue = (<any>Object).entries(value).map(([k, v]: [string, string]) => `**${k}**: ${v}`);\n\t\t}\n\n\t\t// Transform arrays\n\t\tif (Array.isArray(value)) {\n\n\t\t\t// Turn 2D arrays into tables\n\t\t\tif (value.length > 0 && Array.isArray(value[0])) {\n\t\t\t\tvalue = tableTemplate({rows: value, config: config});\n\t\t\t}\n\n\t\t\t// Turn 1D arrays into bullets\n\t\t\telse {\n\t\t\t\tvalue = bulletsTemplate({bullets: value, config: config});\n\t\t\t}\n\n\t\t}\n\n\t\treturn value || text;\n\t},\n\tparams: ({config, match}) => {\n\t\tconst text = match[1];\n\t\treturn {config, text: text.trim()};\n\t}\n};\n\n/**\n * Generates the toc.\n */\nexport const generateToc: IGenerator<TableOfContentsTemplateArgs> = {\n\tname: \"toc\",\n\tregex: placeholderRegexCallback(\"template:toc\"),\n\ttemplate: tocTemplate,\n\tparams: ({config, blueprint}) => {\n\t\tconst titles = blueprint.match(/^[#]{1,6} .*$/gm);\n\t\tif (titles == null) {\n\t\t\treturn {error: \"it could not find any titles\"};\n\t\t}\n\t\treturn {titles, config};\n\t}\n};\n\n/**\n * Generates documentation.\n */\nexport const generateDocumentation: IGenerator<DocumentationTemplateArgs> = {\n\tname: \"documentation\",\n\tregex: placeholderRegexCallback(\"doc:(.+?)\"),\n\ttemplate: documentationTemplate,\n\tparams: ({match, config}: IGeneratorParamsArgs) => {\n\t\tconst glob = match[2];\n\t\tif (glob.length === 0) {\n\t\t\treturn {error: \"it could not find the glob\"};\n\t\t}\n\t\treturn {glob, config};\n\t}\n};\n","import { WcaCliConfig } from \"web-component-analyzer\";\nimport { generateBadges, generateContributors, generateDescription, generateDocumentation, generateInterpolate, generateLicense, generateLine, generateLoad, generateLogo, generateMainTitle, generateTitle, generateToc } from \"./generate/generators\";\nimport { getValue, loadConfig, setValue } from \"./helpers\";\nimport { IConfig, IGenerator, LineColor, Options } from \"./model\";\n\nexport const defaultGenerators: IGenerator<any>[] = [\n\t// Pre process\n\tgenerateLoad,\n\n\t// Process\n\tgenerateLogo,\n\tgenerateMainTitle,\n\tgenerateBadges,\n\tgenerateDescription,\n\tgenerateLine,\n\tgenerateContributors,\n\tgenerateLicense,\n\tgenerateDocumentation,\n\n\t// Post process\n\tgenerateTitle,\n\tgenerateInterpolate,\n\tgenerateToc\n];\n\nexport const defaultDocumentationConfig: WcaCliConfig = {\n\tformat: \"md\",\n\tdebug: false,\n\tmarkdown: {titleLevel: 2},\n};\n\n/**\n * Default name of the blueprint configuration.\n */\nexport const defaultConfigName = `blueprint.json`;\n\n/**\n * Default configuration.\n */\nexport const defaultConfig: IConfig = {\n\tlineBreak: \"\\r\\n\",\n\ttab: \"\\t\",\n\tinput: \"blueprint.md\",\n\tpackage: \"package.json\",\n\toutput: \"README.md\",\n\tcheckLinks: false,\n\tplaceholder: [\"{{\", \"}}\"],\n\tdry: false,\n\tsilent: false,\n\thelp: false,\n\tline: LineColor.COLORED,\n\ttemplates: [],\n\tcontributorsPerRow: 6,\n\theadingPrefix: {\n\t\t1: \"➤ \",\n\t\t2: \"➤ \"\n\t},\n\tpkg: {},\n\tdocumentationConfig: defaultDocumentationConfig\n};\n\n\n\n\n/**\n * Converts a value to a boolean.\n * @param v\n */\nfunction booleanTransformer (v: any): boolean {\n\treturn v !== \"false\";\n}\n\n/**\n * Transforms the value based on the type.\n * @param type\n * @param value\n */\nfunction transformValue ({type, value}: {type: any, value: any}): any {\n\tif (value == null) {\n\t\treturn null;\n\t}\n\n\tif (type === Boolean) {\n\t\treturn booleanTransformer(value);\n\t}\n\n\treturn value;\n}\n\n/**\n * Constructs a config using the extend path if one is defined.\n * @param config\n */\nexport function extendConfigWithExtendConfig ({config}: {config: IConfig}): IConfig {\n\n\t// Recursively load the extend path.\n\tconst extend = config.extend;\n\tif (extend != null) {\n\t\tconst extendConfig = loadConfig(extend);\n\n\t\t// Make sure the config exists\n\t\tif (extendConfig == null) {\n\t\t\tthrow new Error(`Could not load extend config at path \"${extend}\". Make sure the file exists.`);\n\t\t}\n\n\t\t// Merge the extend with the config. The config object takes precedence.\n\t\tconfig = {...extendConfigWithExtendConfig({config: extendConfig}), ...config};\n\t}\n\n\treturn config;\n}\n\n/**\n * Constructs a configuration object with defaults.\n * @param pkg\n * @param options\n * @param config\n */\nexport function extendConfigWithDefaults ({options, config}: {config: IConfig, options: Options}): IConfig {\n\tconfig = {...config};\n\n\tfor (let [key, value] of Object.entries(defaultConfig)) {\n\t\tvalue = getValue(options, key) || getValue(config, key) || value;\n\t\tsetValue(config, key, value);\n\t}\n\n\treturn config;\n}\n","import { green, red, yellow } from \"colors\";\nimport { resolve } from \"path\";\nimport { defaultConfig, defaultConfigName, defaultGenerators, extendConfigWithDefaults, extendConfigWithExtendConfig } from \"../config\";\nimport { checkLinksAliveness, extractValues, fileExists, isFunction, loadConfig, loadPackage, readFile, replaceInString, validateObject, writeFile } from \"../helpers\";\nimport { IConfig, IGenerator, IGeneratorParamsArgs, IGeneratorParamsError, Options, Params } from \"../model\";\nimport { simpleTemplateGenerator } from \"./generators\";\n\n/**\n * Generates a readme.\n * @param pkg\n * @param blueprint\n * @param configPath\n * @param generators\n */\nexport async function generateReadme ({config, blueprint, configPath, generators}: {config: IConfig, blueprint: string, configPath: string, generators: IGenerator<any>[]}): Promise<string> {\n\n\tconst {silent} = config;\n\n\t// Go through all of the generators and replace with the template\n\tlet defaultArgs = {config, configPath, generateReadme};\n\n\tfor (const generator of generators) {\n\t\tconst regex = generator.regex({...defaultArgs, blueprint});\n\t\tlet match: RegExpMatchArray | null = null;\n\n\t\tdo {\n\t\t\tmatch = regex.exec(blueprint);\n\t\t\tif (match != null) {\n\t\t\t\tlet markdown = match[0];\n\t\t\t\tlet errorReason;\n\t\t\t\tlet params: any | null | Params | IGeneratorParamsError = null;\n\n\t\t\t\t// If the params are required we extract them from the package.\n\t\t\t\tif (generator.params != null) {\n\t\t\t\t\tif (isFunction(generator.params)) {\n\n\t\t\t\t\t\t// Extract the params using the function\n\t\t\t\t\t\tparams = (<(args: IGeneratorParamsArgs) => any>generator.params)({\n\t\t\t\t\t\t\t...defaultArgs,\n\t\t\t\t\t\t\tblueprint,\n\t\t\t\t\t\t\tmatch\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// Validate the params\n\t\t\t\t\t\tif (params == null || params.error) {\n\t\t\t\t\t\t\terrorReason = (params || {}).error || `the params couldn't not be generated`;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// Get the required and optional parameters\n\t\t\t\t\t\tconst optionalParams = (<any>generator.params)[\"optional\"] || [];\n\t\t\t\t\t\tconst requiredParams = {...generator.params};\n\t\t\t\t\t\tdelete requiredParams[\"optional\"];\n\n\t\t\t\t\t\t// Validate the params\n\t\t\t\t\t\tif (!validateObject({obj: config, requiredFields: (<any>Object).values(requiredParams)})) {\n\t\t\t\t\t\t\terrorReason = `\"${configPath}\" is missing one or more of the keys \"${(<any>Object).values(requiredParams)\n\t\t\t\t\t\t\t                                                                                  .join(\", \")}\"`;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tparams = extractValues({map: {...optionalParams, ...requiredParams}, obj: config});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Use the template if no errors occurred\n\t\t\t\tif (errorReason == null) {\n\t\t\t\t\tmarkdown = await generator.template({...defaultArgs, blueprint, ...params});\n\n\t\t\t\t} else {\n\t\t\t\t\tif (!silent) {\n\t\t\t\t\t\tconsole.log(yellow(`[readme] - The readme generator \"${generator.name}\" matched \"${match[0]}\" but was skipped because ${errorReason}.`));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Replace the match with the new markdown\n\t\t\t\tconst start = match.index!;\n\t\t\t\tconst end = start + match[0].length;\n\t\t\t\tblueprint = replaceInString(blueprint, markdown, {start, end});\n\n\t\t\t\t// Change the regex pointer so we dont parse the newly added content again\n\t\t\t\tregex.lastIndex = start + markdown.length;\n\t\t\t}\n\t\t} while (match != null);\n\t}\n\n\treturn blueprint;\n}\n\n/**\n * Generates the readme.\n */\nexport async function generate ({config, configPath, generators}: {config: IConfig, configPath: string, generators: IGenerator<any>[]}) {\n\n\tconst {dry, silent, templates, output} = config;\n\n\t// Grab blueprint\n\tlet blueprint: string = \"\";\n\tif (Array.isArray(config.input)) {\n\t\tblueprint = config.input.join(config.lineBreak);\n\n\t} else {\n\t\tconst blueprintPath = resolve(config.input);\n\t\tif (!fileExists(blueprintPath)) {\n\t\t\tconsole.log(red(`[readme] - Could not find the blueprint file \"${blueprintPath}\". Make sure to provide a valid path as either the user arguments --readme.input or in the \"input\" field in the \"${configPath}\" file.`));\n\t\t\treturn;\n\t\t}\n\n\t\tblueprint = readFile(blueprintPath) || \"\";\n\t}\n\n\t// Grab templates\n\tif (templates != null) {\n\t\tconst simpleTemplateGenerators = templates.map(simpleTemplateGenerator);\n\n\t\t// Append the simple generators after the loading generator\n\t\tgenerators.splice(1, 0, ...simpleTemplateGenerators);\n\t}\n\n\t// Generate the readme\n\tconst readme = await generateReadme({config, blueprint, configPath, generators});\n\n\t// Check broken links\n\tif (config.checkLinks) {\n\t\tawait checkLinksAliveness(readme);\n\t}\n\n\t// Write the file\n\tif (!dry) {\n\t\ttry {\n\t\t\tawait writeFile({target: output, content: readme});\n\n\t\t\t// Print the success messsage if not silent\n\t\t\tif (!silent) {\n\t\t\t\tconsole.log(green(`[readme] - A readme file was successfully generated at \"${output}\".`));\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.log(red(`[readme] - Could not generate readme at \"${output}\"`), err);\n\t\t}\n\n\t} else {\n\t\tconsole.log(green(`[readme] - Created the following readme but did not write it to any files\".`), green(readme));\n\t}\n}\n\n/**\n * Runs the readme command.\n * @param options\n */\nexport async function generateCommand (options: Options) {\n\tconst configPath = resolve(options[\"config\"] || options[\"c\"] || defaultConfigName);\n\n\tlet config: IConfig = loadConfig(configPath) || defaultConfig;\n\tconfig = extendConfigWithExtendConfig({config});\n\tconfig = extendConfigWithDefaults({config, options});\n\n\t// Extend the config with the package object\n\tconfig.pkg = {...(loadPackage(config.package) || {}), ...config.pkg};\n\tawait generate({config, configPath, generators: defaultGenerators});\n}","import * as program from \"commander\";\nimport pkg from \"./../package.json\";\nimport { checkLinksCommand } from \"./check-links/check-links\";\nimport { defaultConfig, defaultConfigName, defaultDocumentationConfig } from \"./config\";\nimport { generateCommand } from \"./generate/generate\";\n\n/**\n * Runs the cli.\n * @param argv\n */\nexport async function run (argv: string[]) {\n\tprogram\n\t\t.version(pkg.version);\n\n\tprogram\n\t\t.command(`check-links`)\n\t\t.description(`Checks all links for aliveness.`)\n\t\t.option(`--i, --input <string>`, `Path of the file that needs to be checked. Defaults to '${defaultConfig.output}'`, defaultConfig.output)\n\t\t.action( cmd  => {\n\t\t\tcheckLinksCommand(cmd.opts()).then();\n\t\t});\n\n\tprogram\n\t\t.command(`generate`)\n\t\t.description(`Generates a README file.`)\n\t\t.option(`-c --config <path>`, `Path of the configuration file. Defaults to '${defaultConfigName}'.`)\n\t\t.option(`-p --package <path>`, `Path of the package file. Defaults to '${defaultConfig.package}'.`)\n\t\t.option(`-o --output <path>`, `Path of the generated README file. Defaults to '${defaultConfig.output}'.`)\n\t\t.option(`-i --input <path>`, `Path of the blueprint. Defaults to '${defaultConfig.input}'.`)\n\t\t.option(`-e --extend <path>`, `Path to another configuration object that should be extended.`)\n\t\t.option(`-d --dry`, `Whether the command should run as dry. If dry, the output file is not generated but outputted to the console instead.`)\n\t\t.option(`--badges <list>`, `Badges. Used for the 'badges' template.`)\n\t\t.option(`--text <string>`, `Text describing your project. Used for the 'description' template.`)\n\t\t.option(`--demo <string>`, `Demo url for your project. Used for the 'description' template.`)\n\t\t.option(`--lineBreak <string>`, `The linebreak used in the generation of the README file. Defaults to '\\\\r\\\\n'`)\n\t\t.option(`--tab <string>`, `The tab used in the generation of the README file. Defaults to '\\\\t'`)\n\t\t.option(`--placeholder <list>`, `The placeholder syntax used when looking for templates in the blueprint. Defaults to '\\[\"\\{\\{\", \"\\}\\}\"\\]`)\n\t\t.option(`--line <string>`, `The line style of the titles. Can also be an URL. Defaults to 'colored'.`)\n\t\t.option(`--templates <list>`, `User created templates.`)\n\t\t.option(`--silent`, `Whether the console output from the command should be silent.`)\n\t\t.option(`--headingPrefix <object>`, `The prefix of the header tags. Defaults to '\\{1: \"➤ \", 2: \"➤ \"\\}'`)\n\t\t.option(`--logo <object>`, `The logo information. Used for the 'logo' template.`)\n\t\t.option(`--contributorsPerRow <integer>`, `The amount of contributors pr row when using the 'contributors' template. Defaults to '${defaultConfig.contributorsPerRow}'`)\n\t\t.option(`--documentationConfig <object>`, `Configuration object for automatic documentation template.`)\n\t\t.option(`--checkLinks`, `Checks all links for aliveness after the README file has been generated.`)\n\t\t.option(`--pkg.name <string>`, `Contributors of the project. Used for the 'contributors' template.`)\n\t\t.option(`--pkg.contributors <list>`, `Contributors of the project. Used for the 'contributors' template.`)\n\t\t.option(`--pkg.license <license>`, `License kind. Used for the 'license' template.`)\n\t\t.action( cmd  => {\n\t\t\tgenerateCommand(cmd.opts()).then();\n\t\t});\n\n\t// Do some error handling\n\tconst userArgs = argv.slice(2);\n\tif (userArgs.length === 0) {\n\t\tprogram.help();\n\t}\n\n\t// Handle unknown commands\n\tprogram.on(\"command:*\", () => {\n\t\tconsole.error(`Invalid command: ${userArgs.join(\" \")}\\nSee --help for a list of available commands.`);\n\t\tprocess.exit(1);\n\t});\n\n\t// Parse the input\n\tprogram.parse(argv);\n}\n","import { run } from \"./run\";\n\nrun(process.argv).catch(e => {\n\tconsole.log(e);\n\tprocess.exit(-1);\n});\n"],"names":["program.version","program.command","program.help","program.on","program.parse"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAIA,IAAY,SAAZ;;AAAA,CAAA,UAAY,SAAZ,EAAqB;EACpB,SAAA,CAAA,MAAA,CAAA,GAAA,MAAA;EACA,SAAA,CAAA,QAAA,CAAA,GAAA,QAAA;EACA,SAAA,CAAA,SAAA,CAAA,GAAA,SAAA;EACA,SAAA,CAAA,KAAA,CAAA,GAAA,KAAA;EACA,SAAA,CAAA,MAAA,CAAA,GAAA,MAAA;EACA,SAAA,CAAA,MAAA,CAAA,GAAA,MAAA;EACA,SAAA,CAAA,OAAA,CAAA,GAAA,OAAA;EACA,SAAA,CAAA,SAAA,CAAA,GAAA,SAAA;EACA,SAAA,CAAA,OAAA,CAAA,GAAA,OAAA;EACA,SAAA,CAAA,SAAA,CAAA,GAAA,SAAA;EACA,SAAA,CAAA,OAAA,CAAA,GAAA,OAAA;EACA,SAAA,CAAA,MAAA,CAAA,GAAA,MAAA;CAZD,EAAY,SAAS,KAAT,SAAS,GAAA,EAAA,CAArB;;ACFA;;;;;AAIA,AAAM,SAAU,SAAV,CAAqB;EAAC;CAAtB,EAA6C;SAC3C,CACN;WACQ,qBADR;WAEQ,iCAAiC,KAAK,eAF9C;WAGQ,iCAAiC,KAAK;GAJxC,EAMN;WACQ,aADR;WAEQ,iCAAiC,KAAK,EAF9C;WAGQ,gCAAgC,KAAK;GATvC,CAAP;;;;;;;AAkBD,AAAM,SAAU,YAAV,CAAwB;EAAC;CAAzB,EAAsD;SACpD,CACN;WACQ,cADR;WAEQ,wBAAwB,QAAQ,EAFxC;WAGQ,gCAAgC,QAAQ;GAJ1C,EAMN;WACQ,cADR;WAEQ,sBAAsB,QAAQ,sBAFtC;WAGQ,8CAA8C,QAAQ;GATxD,CAAP;;;;;;;AAkBD,AAAM,SAAU,mBAAV,CAA+B;EAAC;CAAhC,EAA2E;SACzE,CACN;WACQ,gCADR;WAEQ,yCAAyC,eAAe,EAFhE;WAGQ;GAJF,CAAP;;;MCtCY,WAAW,GAAG,weAApB;;;;;;AAMP,AAAM,SAAU,UAAV,CAAsB,GAAtB,EAAiC;SAC/B,WAAW,CAAC,IAAZ,CAAiB,GAAjB,CAAP;;;;;;;;AAQD,AAAM,SAAU,MAAV,CAAkB,GAAlB,EAA+B,GAA/B,EAA0C;SACxC,QAAQ,CAAC,GAAD,EAAM,GAAN,CAAR,IAAsB,IAA7B;;;;;;;AAOD,AAAM,SAAU,aAAV,CAAyB,OAAzB,EAAwC;SACtC,mCAAmC,OAAO,EAAjD;;;;;;;;AAQD,AAAM,SAAU,QAAV,CAAuB,GAAvB,EAAkD,OAAlD,EAAiE;MAClE,IAAI,GAAG,OAAO,CAAC,KAAR,CAAc,GAAd,CAAX;;SACO,IAAI,CAAC,MAAL,GAAc,CAAd,IAAmB,GAAG,IAAI,IAAjC,EAAuC;IACtC,OAAO,GAAG,IAAI,CAAC,KAAL,EAAV;IACA,GAAG,GAAG,GAAG,CAAC,OAAD,CAAT;;;SAGgB,GAAjB;;;;;;;;;AASD,AAAM,SAAU,QAAV,CAAuB,GAAvB,EAAiC,OAAjC,EAAkD,KAAlD,EAA0D;MAC3D,IAAI,GAAG,OAAO,CAAC,KAAR,CAAc,GAAd,CAAX;;SACO,IAAI,CAAC,MAAL,GAAc,CAArB,EAAwB;;QAGnB,IAAI,CAAC,MAAL,KAAgB,CAApB,EAAuB;MACtB,GAAG,CAAC,IAAI,CAAC,KAAL,EAAD,CAAH,GAAqB,KAArB;;;;UAIK,GAAG,GAAG,IAAI,CAAC,KAAL,EAAZ;;QACI,GAAG,CAAC,GAAD,CAAH,IAAY,IAAhB,EAAsB;MACrB,GAAG,GAAG,GAAG,CAAC,GAAD,CAAT;KADD,MAEO;MACN,GAAG,GAAI,GAAG,CAAC,GAAD,CAAH,GAAW,EAAlB;;;;;;;;;;AAUH,AAAM,SAAU,cAAV,CAA0B;EAAC,GAAD;EAAM;CAAhC,EAAwF;OACxF,MAAM,GAAX,IAAkB,cAAlB,EAAkC;QAC7B,CAAC,MAAM,CAAC,GAAD,EAAM,GAAN,CAAX,EAAuB;aACf,KAAP;;;;SAIK,IAAP;;;;;;;AAOD,AAAM,SAAU,UAAV,CAAsB,IAAtB,EAAmC;SACjC,OAAO,IAAP,KAAgB,UAAvB;;;;;;;AAOD,AAAM,SAAU,QAAV,CAAoB,GAApB,EAAgC;MACjC,GAAG,IAAI,IAAX,EAAiB;WACT,KAAP;;;SAGM,OAAO,GAAP,KAAe,QAAf,IAA2B,CAAC,KAAK,CAAC,OAAN,CAAc,GAAd,CAAnC;;;;;;;;AAQD,AAAM,SAAU,aAAV,CAAyB;EAAC,GAAD;EAAM;CAA/B,EAA6E;QAC5E,MAAM,GAAG,EAAf;;OACK,MAAM,CAAC,CAAD,EAAI,CAAJ,CAAX,IAA2B,MAAO,CAAC,OAAR,CAAgB,GAAhB,CAA3B,EAAiD;IAC1C,MAAO,CAAC,CAAD,CAAP,GAAa,QAAQ,CAAC,GAAD,EAAM,CAAN,CAArB;;;SAGA,MAAP;;;;;;;AAOD,AAAM,SAAU,SAAV,CAAqB;EAAC;CAAtB,EAAgD;QAC/C,MAAM,GAAa,EAAzB;QAEM,KAAK,GAAG,QAAQ,CAAS,MAAT,EAAiB,SAAjB,CAAtB;QACM,QAAQ,GAAG,QAAQ,CAAS,MAAT,EAAiB,YAAjB,CAAzB;QACM,eAAe,GAAG,QAAQ,CAAS,MAAT,EAAiB,mBAAjB,CAAhC,CALqD;;MAQjD,KAAK,IAAI,IAAb,EAAmB;IAClB,MAAM,CAAC,IAAP,CAAY,GAAG,SAAS,CAAC;MAAC;KAAF,CAAxB;GAToD;;;MAajD,QAAQ,IAAI,IAAhB,EAAsB;IACrB,MAAM,CAAC,IAAP,CAAY,GAAG,YAAY,CAAC;MAAC;KAAF,CAA3B;GAdoD;;;MAkBjD,eAAe,IAAI,IAAvB,EAA6B;IAC5B,MAAM,CAAC,IAAP,CAAY,GAAG,mBAAmB,CAAC;MAAC;KAAF,CAAlC;GAnBoD;;;EAuBrD,MAAM,CAAC,IAAP,CAAY,IAAI,MAAM,CAAC,MAAP,IAAiB,EAArB,CAAZ;SAEO,MAAP;;;;;;;AAOD,AAAM,SAAU,QAAV,CAAoB,IAApB,EAAgC;;MAGjC,CAAC,UAAU,CAAC,IAAD,CAAf,EAAuB;WACf,IAAP;;;SAGM,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,GAAR,EAAD,EAAgB,IAAhB,CAAR,CAAZ,CAA2C,QAA3C,CAAoD,MAApD,CAAP;;;;;;;AAOD,AAAM,SAAU,YAAV,CAAwB,IAAxB,EAAoC;QACnC,IAAI,GAAG,QAAQ,CAAC,IAAD,CAArB;SACO,IAAI,IAAI,IAAR,GAAe,IAAI,CAAC,KAAL,CAAW,IAAX,CAAf,GAAkC,IAAzC;;;;;;;AAOD,AAAM,SAAU,WAAV,CAAuB,IAAvB,EAAmC;SACjC,IAAI,CAAC,OAAL,CAAa,0BAAb,EAAyC,MAAzC,CAAP;;;;;;;AAOD,AAAM,SAAU,wBAAV,CAAoC,IAApC,EAAgD;SAC7C,CAAC;IAAC;GAAF,KAAgC;UACjC;MAAC;QAAe,MAAtB;WACO,IAAI,MAAJ,CAAW,GAAG,WAAW,CAAC,WAAW,CAAC,CAAD,CAAZ,CAAgB,QAAQ,IAAI,QAAQ,WAAW,CAAC,WAAW,CAAC,CAAD,CAAZ,CAAgB,EAAxF,EAA4F,IAA5F,CAAP;GAFD;;;;;;;;AAWD,AAAO,eAAe,SAAf,CAA0B;EAAC,MAAD;EAAS;CAAnC,EAA8E;MAChF;UACG,UAAU,CAAC,MAAD,EAAS,OAAT,CAAhB;GADD,CAEE,OAAO,GAAP,EAAY;IACb,OAAO,CAAC,KAAR,CAAc,GAAd;;;;;;;;;;AAUF,AAAM,SAAU,QAAV,CAAoB;EAAC,KAAD;EAAQ,KAAR;EAAe;CAAnC,EAA2F;QAC1F,MAAM,GAAG,MAAM,CAAC,aAAP,CAAqB,KAArB,KAA+B,EAA9C;SACO,GAAG,MAAM,GAAG,KAAK,EAAxB;;;;;;;AAOD,AAAM,SAAU,aAAV,CAAyB,KAAzB,EAAsC;SACpC,KAAK,CAAC,OAAN,CAAc,kBAAd,EAAkC,EAAlC,CAAP;;;;;;;;AAQD,AAAM,SAAU,YAAV,CAAwB,KAAxB,EAAuC,KAAA,GAAgB,CAAvD,EAAwD;SACtD,IAAI,aAAa,CAAC,KAAD,CAAb,CAAqB,OAArB,CAA6B,IAA7B,EAAmC,GAAnC,EAAwC,WAAxC,EAAqD,GAAG,KAAK,GAAG,CAAR,GAAY,IAAI,KAAK,EAArB,GAA0B,EAAE,EAA/F;;;;;;;AAOD,AAAM,SAAU,UAAV,CAAsB,YAAtB,EAA0C;MAC3C,YAAY,IAAI,IAAhB,IAAwB,YAAY,IAAI,EAA5C,EAAgD,OAAO,KAAP;SACzC,UAAU,CAAC,YAAD,CAAjB;;;;;;;;AAQD,AAAM,SAAU,oBAAV,CAAmC,GAAnC,EAA6C,KAA7C,EAA0D;EAC/D,GAAG,GAAG,CAAC,GAAG,GAAJ,CAAN;QACM,IAAI,GAAU,EAApB;;SACO,GAAG,CAAC,MAAX,EAAmB;IAClB,IAAI,CAAC,IAAL,CAAU,GAAG,CAAC,MAAJ,CAAW,CAAX,EAAc,KAAd,CAAV;;;SAGM,IAAP;;;;;;;;;;AAUD,AAAM,SAAU,eAAV,CAA2B,MAA3B,EAA2C,OAA3C,EAA4D;EAAC,KAAD;EAAQ;CAApE,EAAsG;SACpG,MAAM,CAAC,SAAP,CAAiB,CAAjB,EAAoB,KAApB,IAA6B,OAA7B,GAAuC,MAAM,CAAC,SAAP,CAAiB,GAAjB,CAA9C;;;;;;;AAOD,AAAM,SAAU,WAAV,CAAuB,OAAvB,EAAsC;SAC1B,YAAY,CAAC,OAAD,CAAZ,IAAyB,IAA1C;;;;;;;AAOD,AAAM,SAAU,UAAV,CAAsB,UAAtB,EAAwC;SAC7B,YAAY,CAAC,UAAD,CAAZ,IAA4B,IAA5C;;;;;;;AAOD,AAAM,SAAU,QAAV,CAAoB,IAApB,EAAgC;SAC9B,KAAK,CAAC,IAAN,CAAW,IAAI,CAAC,KAAL,CAAW,gDAAX,KAAgE,EAA3E,CAAP;;;;;;;AAOD,AAAO,eAAe,mBAAf,CAAoC,IAApC,EAAgD;QAChD,KAAK,GAAG,QAAQ,CAAC,IAAD,CAAtB;EACA,OAAO,CAAC,GAAR,CAAY,KAAK,CAAC,qBAAqB,KAAK,CAAC,MAAM,SAAS,KAAK,CAAC,MAAN,KAAiB,CAAjB,GAAqB,EAArB,GAA0B,GAAG,6BAAxE,CAAjB,EAFsD;;QAKhD,OAAO,GAAG,MAAM,UAAU,CAAC,KAAD,CAAhC,CALsD;;OAQjD,MAAM,CAAC,IAAD,EAAO;IAAC,MAAD;IAAS;GAAhB,CAAX,IAA2C,MAAM,CAAC,OAAP,CAAe,OAAf,CAA3C,EAAoE;QAC/D,MAAM,KAAK,MAAf,EAAuB;MACtB,OAAO,CAAC,GAAR,CAAY,GAAG,CAAC,wBAAwB,IAAI,0CAA0C,UAAU,IAAjF,CAAf;;;;;ACjTH;;;;;AAIA,AAAO,eAAe,iBAAf,CAAkC,OAAlC,EAAkD;QAClD,IAAI,GAAG,QAAQ,CAAS,OAAT,EAAkB,OAAlB,CAArB,CADwD;;MAIpD,IAAI,IAAI,IAAZ,EAAkB;IACjB,OAAO,CAAC,GAAR,CAAY,GAAG,CAAC,iCAAiC,IAAI,IAAtC,CAAf;;;;QAIK,OAAO,GAAG,QAAQ,CAAC,IAAD,CAAxB,CATwD;;MAYpD,OAAO,IAAI,IAAf,EAAqB;IACpB,OAAO,CAAC,GAAR,CAAY,GAAG,CAAC,+CAA+C,IAAI,IAApD,CAAf;;;;QAIK,mBAAmB,CAAC,OAAD,CAAzB;;;ACvBD;;;;;AAIA,AAAM,SAAU,YAAV,CAAwB;EAAC;CAAzB,EAAgD;QAC/C;IAAC,GAAD;IAAM,KAAK,GAAG,MAAd;IAAsB,MAAM,GAAG,MAA/B;IAAuC,GAAG,GAAG;MAAU,IAA7D;SACO;cACM,GAAG,UAAU,GAAG,YAAY,KAAK,aAAa,MAAM;KADjE;;;;;;;AASD,AAAM,SAAU,iBAAV,CAA6B;EAAC;CAA9B,EAA0D;SACxD,sBAAsB,IAAI,OAAjC;;;;;;;AAOD,AAAM,SAAU,YAAV,CAAwB;EAAC;CAAzB,EAAkD;MACnD,GAAG,GAAG,EAAV;QACM;IAAC;MAAQ,MAAf,CAFuD;;MAKnD,IAAI,KAAK,SAAS,CAAC,IAAvB,EAA6B;WACrB,EAAP;GANsD;;;MAUnD,UAAU,CAAC,IAAD,CAAd,EAAsB;IACrB,GAAG,GAAG,IAAN;GADD,MAEO;IACN,GAAG,GAAG,0EAA0E,IAAI,MAApF;;;SAGM,4DAA4D,GAAG,GAAtE;;;;;;;;;AASD,AAAM,SAAU,aAAV,CAAyB;EAAC,KAAD;EAAQ,KAAR;EAAe;CAAxC,EAAkE;QACjE,kBAAkB,GAAG,KAAK,IAAI,CAAT,GAAa,GAAG,MAAM,CAAC,SAAS,IAAI,YAAY,CAAC;IAAC;GAAF,CAAU,KAAK,YAAY,CAAC,KAAD,CAAO,IAAI,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,EAAzH,GAA8H,EAAzJ;SACO,GAAG,kBAAkB,GAAS,KAAK,CAAC,KAAD,CAAL,CAAc,IAAd,CAAmB,GAAnB,EAAwB,IAAxB,CAA6B,EAA7B,CAAgC,IAAI,QAAQ,CAAC;IAAC,KAAD;IAAQ,KAAR;IAAe;GAAhB,CAAwB,EAAzG;;;;;;;;AAQD,AAAM,SAAU,cAAV,CAA0B;EAAC,MAAD;EAAS;CAAnC,EAA8D;SAC5D;IACJ,MAAM,CAAC,GAAP,CAAW,KAAK,IAAI,YAAY,KAAK,CAAC,GAAG,eAAe,KAAK,CAAC,GAAG,UAAU,KAAK,CAAC,GAAG,qBAApF,EACU,IADV,CACe,MAAM,CAAC,SADtB,CACgC;;CAFnC;;;;;;;;AAYD,AAAM,SAAU,eAAV,CAA2B;EAAC;CAA5B,EAAyD;SACvD;;kBAEU,OAAO,KAAK,aAAa,CAAC,OAAD,CAAS,IAFnD;;;;;;;AASD,AAAM,SAAU,YAAV,CAAwB;EAAC;CAAzB,EAA+C;SAC7C,kCAAkC,GAAG,KAAK,GAAG,OAApD;;;;;;;;;AASD,AAAM,SAAU,mBAAV,CAA+B;EAAC,WAAD;EAAc,IAAd;EAAoB;CAAnD,EAAiF;SAC/E;OACD,WAAW;SACT,IAAI,IAAI,IAAR,GAAe,IAAf,GAAsB,EAAE,GAAG,IAAI,IAAI,IAAR,GAAe,IAAI,YAAY,CAAC;IAAC,GAAG,EAAE;GAAP,CAAa,EAA5C,GAAiD,EAAE;;;;CAFtF;;;;;;;;AAcD,AAAM,SAAU,eAAV,CAA2B;EAAC,OAAD;EAAU;CAArC,EAAiE;SAC/D,OAAO,CAAC,GAAR,CAAY,MAAM,IAAI,KAAK,MAAM,EAAjC,EAAqC,IAArC,CAA0C,MAAM,CAAC,SAAjD,CAAP;;;;;;;;;AASD,AAAM,SAAU,aAAV,CAAyB;EAAC,IAAD;EAAO,MAAP;EAAe;CAAxC,EAAoE;;;;;;;WAOhE,SAAT,CAAoB,IAApB,EAAkC,KAAlC,EAAiD,YAAjD,EAAqE;WAC7D,IAAI,MAAJ,CAAW,YAAX,IAA2B,IAA3B,GAAkC,IAAI,MAAJ,CAAW,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,KAAK,GAAG,IAAI,CAAC,MAAb,GAAsB,YAAlC,CAAX,CAAzC;;;;;;;;WAOQ,uBAAT,CAAiC,IAAjC,EAA6C;WACrC,IAAI,CAAC,OAAL,CAAa,KAAb,EAAoB,QAApB,EAA8B,OAA9B,CAAsC,KAAtC,EAA6C,KAA7C,CAAP;GAhBwE;;;EAoBzE,IAAI,GAAG,IAAI,CAAC,MAAL,CAAY,GAAG,IAAI,GAAG,CAAC,GAAJ,CAAQ,CAAC,IAAI,CAAC,CAAC,IAAF,EAAb,EAAuB,IAAvB,CAA4B,EAA5B,EAAgC,MAAhC,GAAyC,CAA5D,CAAP,CApByE;;QAuBnE,WAAW,GAAG,IAAI,CAAC,GAAL,CAAS,GAAG,IAAI,CAAC,GAAL,CAAS,CAAC,IAAI,CAAC,CAAC,MAAhB,CAAZ,CAApB,CAvByE;;EA0BzE,IAAI,GAAG,IAAI,CAAC,GAAL,CAAS,CAAC,IAAI,CAAC,CAAC,GAAF,CAAM,uBAAN,CAAd,CAAP;QAGM,SAAS,GAAG,CAAlB;QACM,SAAS,GAAG,EAAlB;QACM,OAAO,GAAG,CAAhB;QACM,cAAc,GAAG,QAAQ,GAAG,GAAH,GAAS,EAAxC;QAEM,YAAY,GAAG,KAAK,CAAC,WAAD,CAAL,CACnB,IADmB,CACd,CADc,EAEnB,GAFmB,CAEf,CAAC,CAAD,EAAI,CAAJ,KAAU,IAAI,CAAC,GAAL,CAAS,SAAT,EAAoB,IAAI,CAAC,GAAL,CAAS,SAAT,EAAoB,GAAG,IAAI,CAAC,GAAL,CAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAD,CAAD,IAAQ,EAAT,EAAa,MAA3B,CAAvB,IAA6D,OAAO,GAAG,CAA3F,CAFK,CAArB;SAIO;GACL,IAAI,CAAC,CAAD,CAAJ,CAAQ,GAAR,CAAY,CAAC,CAAD,EAAI,CAAJ,KAAU,SAAS,CAAC,CAAD,EAAI,YAAY,CAAC,CAAD,CAAhB,EAAqB,OAArB,CAA/B,EAA8D,IAA9D,CAAmE,GAAnE,CAAuE;GACvE,YAAY,CAAC,GAAb,CAAiB,CAAC,IAAI,GAAG,cAAc,GAAG,IAAI,MAAJ,CAAW,CAAX,CAAa,GAAG,cAAc,EAAxE,EAA4E,IAA5E,CAAiF,GAAjF,CAAqF;EACtF,IAAI,CACH,KADD,CACO,CADP,EAEC,GAFD,CAEK,CAAC,IAAI,IAAI,CAAC,CAAC,GAAF,CAAM,CAAC,CAAD,EAAI,CAAJ,KAAU,SAAS,CAAC,CAAD,EAAI,YAAY,CAAC,CAAD,CAAhB,EAAqB,OAArB,CAAzB,EAAwD,IAAxD,CAA6D,GAA7D,CAAiE,GAF/E,EAGC,IAHD,CAGM,MAAM,CAAC,SAHb,CAGuB;CANxB;;;;;;;;AAeD,AAAM,SAAU,WAAV,CAAuB;EAAC,MAAD;EAAS;CAAhC,EAAoE;;;QAInE,eAAe,GAAG,MAAM,CAAC,GAAP,CAAW,KAAK,IAAI,aAAa,CAAC,KAAD,CAAjC,CAAxB,CAJyE;;QAOnE,aAAa,GAAiC,eAAe,CAAC,MAAhB,CAAuB,CAAC,GAAD,EACC,KADD,KACU;IACpF,GAAG,CAAC,KAAD,CAAH,GAAa,CAAC,GAAG,CAAC,KAAD,CAAH,IAAc,CAAf,IAAoB,CAAjC;WACO,GAAP;GAHmD,EAIjD,EAJiD,CAApD,CAPyE;;QAcnE,UAAU,GAAG,MAAM,CAAC,GAAP,CAAW,KAAK,IAAG;UAC/B,UAAU,GAAG,aAAa,CAAC,KAAD,CAAhC;UACM,kBAAkB,GAAG,eAAe,CAAC,MAAhB,CAAuB,CAAC,IAAI,CAAC,KAAK,UAAlC,CAA3B,CAFqC;;IAKrC,eAAe,CAAC,MAAhB,CAAuB,eAAe,CAAC,OAAhB,CAAwB,UAAxB,CAAvB,EAA4D,CAA5D,EALqC;;UAQ/B,KAAK,GAAI,CAAC,aAAa,CAAC,UAAD,CAAb,IAA6B,CAA9B,IAAmC,kBAAkB,CAAC,MAArE,CARqC;;UAW/B,KAAK,GAAG,CAAC,KAAK,CAAC,KAAN,CAAY,IAAZ,KAAqB,EAAtB,EAA0B,MAAxC,CAXqC;;IAcrC,KAAK,GAAG,KAAK,CAAC,OAAN,CAAc,QAAd,EAAwB,EAAxB,CAAR,CAdqC;;UAiB/B,SAAS,GAAG,YAAY,CAAC,KAAD,EAAQ,KAAR,CAA9B;WAEO;MAAC,KAAD;MAAQ,UAAR;MAAoB,KAApB;MAA2B,SAA3B;MAAsC;KAA7C;GAnBkB,CAAnB,CAdyE;;QAqCnE,WAAW,GAAG,UAAU,CAAC,MAAX,CAAkB,CAAC,GAAD,EAAM;IAAC,KAAD;IAAQ;GAAd,KAAyB,IAAI,CAAC,GAAL,CAAS,GAAT,EAAc,KAAd,CAA3C,EAAiE,QAAjE,CAApB,CArCyE;;SAwClE,GAAG,aAAa,CAAC;IAAC,KAAK,EAAE,mBAAR;IAA6B,KAAK,EAAE,CAApC;IAAuC,MAAM,EAAE;GAAhD,CAAwD;;EAE9E,UAAU,CAAC,GAAX,CAAe,CAAC;IAAC,KAAD;IAAQ,SAAR;IAAmB;GAApB,KAA8B;;;UAGvC,IAAI,GAAS,KAAK,CAAC,KAAK,GAAG,WAAT,CAAL,CAA4B,IAA5B,CAAiC,MAAM,CAAC,GAAxC,EAA6C,IAA7C,CAAkD,EAAlD,CAAnB;WACO,GAAG,IAAI,MAAM,KAAK,KAAK,SAAS,GAAvC;GAJA,EAKE,IALF,CAKO,MAAM,CAAC,SALd,CAKwB,EAPzB;;;;;;;;AAeD,AAAM,SAAU,oBAAV,CAAgC;EAAC,YAAD;EAAe;CAA/C,EAAgF;QAC/E;IAAC;MAAsB,MAA7B;QACM,SAAS,GAAG,GAAlB,CAFqF;;QAK/E,IAAI,GAAG,oBAAoB,CAAC,YAAD,EAAe,kBAAf,CAAjC;SAEO;;EAEN,IAAI,CAAC,GAAL,CAAS,GAAG,IAAG;;UAGT,IAAI,GAAG,GAAG,CAAC,GAAJ,CAAQ,CAAC;MAAC,GAAD;MAAM,GAAN;MAAW;KAAZ,KAAsB,GAAG,IAAI,IAAP,GAAc,cAAc,IAAI,UAAU,GAAG,YAAY,SAAS,OAAO,GAAG,GAA5E,GAAkF,GAAhH,CAAb;UACM,KAAK,GAAG,GAAG,CAAC,GAAJ,CAAQ,CAAC;MAAC,GAAD;MAAM,KAAN;MAAa;KAAd,KAAwB,IAAI,IAAI,KAAK,GAAG,GAAhD,CAAd;UACM,MAAM,GAAG,GAAG,CAAC,GAAJ,CAAQ,CAAC;MAAC,GAAD;MAAM;KAAP,KAAkB,KAAK,IAAI,IAAT,GAAgB,IAAI,KAAK,YAAY,KAAK,GAA1C,GAAgD,EAA1E,CAAf,CALe;;UAQT,iBAAiB,GAAG,GAAG,CAAC,MAAJ,CAAW,CAAC,GAAD,EAAM;MAAC;KAAP,KAAiB,IAAI,IAAI,IAAR,GAAe,IAAI,CAAC,GAAL,CAAS,GAAT,EAAc,IAAI,CAAC,MAAnB,CAAf,GAA4C,GAAxE,EAA6E,CAA7E,CAA1B,CARe;;UAWT,KAAK,GAAG,KAAK,CAAC,iBAAD,CAAL,CAAyB,IAAzB,CAA8B,CAA9B,EAAiC,GAAjC,CAAqC,CAAC,CAAD,EAAI,CAAJ,KAAS;aACpD,GAAG,CAAC,GAAJ,CAAQ,CAAC;QAAC;OAAF,KAAY,IAAI,IAAI,IAAR,IAAgB,CAAC,GAAG,IAAI,CAAC,MAAzB,GAAkC,IAAI,CAAC,CAAD,CAAtC,GAA4C,EAAhE,CAAP;KADa,CAAd;UAIM,OAAO,GAAe,CAC3B,IAD2B,EAE3B,KAF2B,EAG3B,MAH2B,EAI3B,GAAG,KAJwB,CAA5B;WAOO,aAAa,CAAC;MAAC,IAAI,EAAE,OAAP;MAAgB,MAAhB;MAAwB,QAAQ,EAAE;KAAnC,CAApB;GAtBA,EAuBE,IAvBF,CAuBO,MAAM,CAAC,SAvBd,CAuBwB,EAzBzB;;;;;;;;AAiCD,AAAM,SAAU,qBAAV,CAAiC;EAAC,IAAD;EAAO;CAAxC,EAA0E;SACxE,IAAI,iBAAJ,GAAwB,OAAxB,CAAgC,IAAhC,EAAsC,MAAM,CAAC,mBAA7C,CAAP;;;ACxQD;;;;;;;AAMA,AAAM,SAAU,uBAAV,CAAmC;EAAC,IAAD;EAAO,QAAP;EAAiB;CAApD,EAA0E;SACxE;IACN,IADM;IAEN,KAAK,EAAE,wBAAwB,CAAC,YAAY,IAAI,EAAjB,CAFzB;IAGN,QAAQ,EAAE,MAAM,QAHV;IAIN;GAJD;;;;;;AAWD,MAAa,YAAY,GAAiC;EACzD,IAAI,EAAE,MADmD;EAEzD,KAAK,EAAE,wBAAwB,CAAC,gBAAD,CAF0B;EAGzD,QAAQ,EAAE,CAAC;IAAC,OAAD;IAAU,cAAV;IAA0B,UAA1B;IAAsC;GAAvC,KAAoE;;;WAGtE,cAAc,CAAC;MAAC,MAAD;MAAS,SAAS,EAAE,OAApB;MAA6B,UAA7B;MAAyC,UAAU,EAAE,CAAC,YAAD;KAAtD,CAArB;GANwD;EAQzD,MAAM,EAAE,CAAC;IAAC,MAAD;IAAS,KAAT;IAAgB,cAAhB;IAAgC;GAAjC,KAAgD;UACjD,YAAY,GAAG,OAAO,CAAC,KAAK,CAAC,CAAD,CAAN,CAA5B,CADuD;;QAInD,CAAC,UAAU,CAAC,YAAD,CAAf,EAA+B;aACvB;QAAC,KAAK,EAAE,aAAa,YAAY;OAAxC;KALsD;;;UASjD,OAAO,GAAG,QAAQ,CAAC,YAAD,CAAR,IAA0B,EAA1C;WACO;MAAC,OAAD;MAAU,cAAV;MAA0B,UAA1B;MAAsC;KAA7C;;CAlBK;;;;;AAyBP,MAAa,YAAY,GAAiC;EACzD,IAAI,EAAE,MADmD;EAEzD,KAAK,EAAE,wBAAwB,CAAC,eAAD,CAF0B;EAGzD,QAAQ,EAAE,YAH+C;EAIzD,MAAM,EAAE;IACP,IAAI,EAAE,MADC;IAEP,GAAG,EAAE;;CANA;;;;;AAaP,MAAa,iBAAiB,GAAsC;EACnE,IAAI,EAAE,YAD6D;EAEnE,KAAK,EAAE,wBAAwB,CAAC,gBAAD,CAFoC;EAGnE,QAAQ,EAAE,iBAHyD;EAInE,MAAM,EAAE;IACP,IAAI,EAAE;;CALD;;;;;AAYP,MAAa,cAAc,GAAmC;EAC7D,IAAI,EAAE,QADuD;EAE7D,KAAK,EAAE,wBAAwB,CAAC,iBAAD,CAF8B;EAG7D,QAAQ,EAAE,cAHmD;EAI7D,MAAM,EAAE,CAAC;IAAC;GAAF,KAAmC;UACpC,MAAM,GAAG,SAAS,CAAC;MAAC;KAAF,CAAxB;;QACI,MAAM,CAAC,MAAP,KAAkB,CAAtB,EAAyB;aACjB;QAAC,KAAK,EAAE;OAAf;;;WAEM;MAAC,MAAD;MAAS;KAAhB;;CATK;;;;;AAgBP,MAAa,mBAAmB,GAAwC;EACvE,IAAI,EAAE,aADiE;EAEvE,KAAK,EAAE,wBAAwB,CAAC,sBAAD,CAFwC;EAGvE,QAAQ,EAAE,mBAH6D;EAIvE,MAAM,EAAE;IACP,WAAW,EAAE,iBADN;IAEP,QAAQ,EAAE;MACT,IAAI,EAAE,MADG;MAET,IAAI,EAAE;;;CARF;;;;;AAgBP,MAAa,YAAY,GAAiC;EACzD,IAAI,EAAE,MADmD;EAEzD,KAAK,EAAE,wBAAwB,CAAC,eAAD,CAF0B;EAGzD,QAAQ,EAAE;CAHJ;;;;;AASP,MAAa,oBAAoB,GAAyC;EACzE,IAAI,EAAE,cADmE;EAEzE,KAAK,EAAE,wBAAwB,CAAC,uBAAD,CAF0C;EAGzE,QAAQ,EAAE,oBAH+D;EAIzE,MAAM,EAAE;IACP,YAAY,EAAE;;CALT;;;;;AAYP,MAAa,eAAe,GAAoC;EAC/D,IAAI,EAAE,SADyD;EAE/D,KAAK,EAAE,wBAAwB,CAAC,kBAAD,CAFgC;EAG/D,QAAQ,EAAE,eAHqD;EAI/D,MAAM,EAAE;IACP,OAAO,EAAE;;CALJ;;;;;AAYP,MAAa,aAAa,GAAkC;EAC3D,IAAI,EAAE,OADqD;EAE3D,KAAK,EAAE,MAAM,qBAF8C;EAG3D,QAAQ,EAAE,aAHiD;EAI3D,MAAM,EAAE,CAAC;IAAC,MAAD;IAAS;GAAV,KAAoB;UACrB,MAAM,GAAG,KAAK,CAAC,CAAD,CAApB;UACM,KAAK,GAAG,KAAK,CAAC,CAAD,CAAnB;WACO;MAAC,KAAD;MAAQ,KAAK,EAAE,MAAM,CAAC,MAAtB;MAA8B;KAArC;;CAPK;;;;;AAcP,MAAa,mBAAmB,GAAgD;EAC/E,IAAI,EAAE,aADyE;EAE/E,KAAK,EAAE,wBAAwB,CAAC,UAAD,CAFgD;EAG/E,QAAQ,EAAE,CAAC;IAAC,MAAD;IAAS;GAAV,KAAmB;QACxB,KAAK,GAAG,QAAQ,CAAS,MAAT,EAAiB,IAAjB,CAApB;QACI,KAAK,IAAI,IAAb,EAAmB,OAAO,IAAP,CAFS;;QAKxB,QAAQ,CAAC,KAAD,CAAZ,EAAqB;MACpB,KAAK,GAAS,MAAO,CAAC,OAAR,CAAgB,KAAhB,EAAuB,GAAvB,CAA2B,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,KAA8B,KAAK,CAAC,OAAO,CAAC,EAAvE,CAAd;KAN2B;;;QAUxB,KAAK,CAAC,OAAN,CAAc,KAAd,CAAJ,EAA0B;;UAGrB,KAAK,CAAC,MAAN,GAAe,CAAf,IAAoB,KAAK,CAAC,OAAN,CAAc,KAAK,CAAC,CAAD,CAAnB,CAAxB,EAAiD;QAChD,KAAK,GAAG,aAAa,CAAC;UAAC,IAAI,EAAE,KAAP;UAAc,MAAM,EAAE;SAAvB,CAArB;OADD;WAKK;UACJ,KAAK,GAAG,eAAe,CAAC;YAAC,OAAO,EAAE,KAAV;YAAiB,MAAM,EAAE;WAA1B,CAAvB;;;;WAKK,KAAK,IAAI,IAAhB;GA3B8E;EA6B/E,MAAM,EAAE,CAAC;IAAC,MAAD;IAAS;GAAV,KAAoB;UACrB,IAAI,GAAG,KAAK,CAAC,CAAD,CAAlB;WACO;MAAC,MAAD;MAAS,IAAI,EAAE,IAAI,CAAC,IAAL;KAAtB;;CA/BK;;;;;AAsCP,MAAa,WAAW,GAA4C;EACnE,IAAI,EAAE,KAD6D;EAEnE,KAAK,EAAE,wBAAwB,CAAC,cAAD,CAFoC;EAGnE,QAAQ,EAAE,WAHyD;EAInE,MAAM,EAAE,CAAC;IAAC,MAAD;IAAS;GAAV,KAAwB;UACzB,MAAM,GAAG,SAAS,CAAC,KAAV,CAAgB,iBAAhB,CAAf;;QACI,MAAM,IAAI,IAAd,EAAoB;aACZ;QAAC,KAAK,EAAE;OAAf;;;WAEM;MAAC,MAAD;MAAS;KAAhB;;CATK;;;;;AAgBP,MAAa,qBAAqB,GAA0C;EAC3E,IAAI,EAAE,eADqE;EAE3E,KAAK,EAAE,wBAAwB,CAAC,WAAD,CAF4C;EAG3E,QAAQ,EAAE,qBAHiE;EAI3E,MAAM,EAAE,CAAC;IAAC,KAAD;IAAQ;GAAT,KAA0C;UAC3C,IAAI,GAAG,KAAK,CAAC,CAAD,CAAlB;;QACI,IAAI,CAAC,MAAL,KAAgB,CAApB,EAAuB;aACf;QAAC,KAAK,EAAE;OAAf;;;WAEM;MAAC,IAAD;MAAO;KAAd;;CATK;;MCzMM,iBAAiB,GAAsB;AAEnD,YAFmD;AAKnD,YALmD,EAMnD,iBANmD,EAOnD,cAPmD,EAQnD,mBARmD,EASnD,YATmD,EAUnD,oBAVmD,EAWnD,eAXmD,EAYnD,qBAZmD;AAenD,aAfmD,EAgBnD,mBAhBmD,EAiBnD,WAjBmD,CAA7C;AAoBP,MAAa,0BAA0B,GAAiB;EACvD,MAAM,EAAE,IAD+C;EAEvD,KAAK,EAAE,KAFgD;EAGvD,QAAQ,EAAE;IAAC,UAAU,EAAE;;CAHjB;;;;;AASP,MAAa,iBAAiB,GAAG,gBAA1B;;;;;AAKP,MAAa,aAAa,GAAY;EACrC,SAAS,EAAE,MAD0B;EAErC,GAAG,EAAE,IAFgC;EAGrC,KAAK,EAAE,cAH8B;EAIrC,OAAO,EAAE,cAJ4B;EAKrC,MAAM,EAAE,WAL6B;EAMrC,UAAU,EAAE,KANyB;EAOrC,WAAW,EAAE,CAAC,IAAD,EAAO,IAAP,CAPwB;EAQrC,GAAG,EAAE,KARgC;EASrC,MAAM,EAAE,KAT6B;EAUrC,IAAI,EAAE,KAV+B;EAWrC,IAAI,EAAE,SAAS,CAAC,OAXqB;EAYrC,SAAS,EAAE,EAZ0B;EAarC,kBAAkB,EAAE,CAbiB;EAcrC,aAAa,EAAE;OACX,IADW;OAEX;GAhBiC;EAkBrC,GAAG,EAAE,EAlBgC;EAmBrC,mBAAmB,EAAE;CAnBf;;;;;;AA6BP,SAAS,kBAAT,CAA6B,CAA7B,EAAmC;SAC3B,CAAC,KAAK,OAAb;;;;;;;;;AAQD,SAAS,cAAT,CAAyB;EAAC,IAAD;EAAO;CAAhC,EAA+D;MAC1D,KAAK,IAAI,IAAb,EAAmB;WACX,IAAP;;;MAGG,IAAI,KAAK,OAAb,EAAsB;WACd,kBAAkB,CAAC,KAAD,CAAzB;;;SAGM,KAAP;;;;;;;;AAOD,AAAM,SAAU,4BAAV,CAAwC;EAAC;CAAzC,EAAmE;;QAGlE,MAAM,GAAG,MAAM,CAAC,MAAtB;;MACI,MAAM,IAAI,IAAd,EAAoB;UACb,YAAY,GAAG,UAAU,CAAC,MAAD,CAA/B,CADmB;;QAIf,YAAY,IAAI,IAApB,EAA0B;YACnB,IAAI,KAAJ,CAAU,yCAAyC,MAAM,+BAAzD,CAAN;KALkB;;;IASnB,MAAM,GAAG,EAAC,GAAG,4BAA4B,CAAC;QAAC,MAAM,EAAE;OAAV,CAAhC;SAA6D;KAAtE;;;SAGM,MAAP;;;;;;;;;AASD,AAAM,SAAU,wBAAV,CAAoC;EAAC,OAAD;EAAU;CAA9C,EAA0F;EAC/F,MAAM,GAAG,EAAC,GAAG;GAAb;;OAEK,IAAI,CAAC,GAAD,EAAM,KAAN,CAAT,IAAyB,MAAM,CAAC,OAAP,CAAe,aAAf,CAAzB,EAAwD;IACvD,KAAK,GAAG,QAAQ,CAAC,OAAD,EAAU,GAAV,CAAR,IAA0B,QAAQ,CAAC,MAAD,EAAS,GAAT,CAAlC,IAAmD,KAA3D;IACA,QAAQ,CAAC,MAAD,EAAS,GAAT,EAAc,KAAd,CAAR;;;SAGM,MAAP;;;ACvHD;;;;;;;;AAOA,AAAO,eAAe,cAAf,CAA+B;EAAC,MAAD;EAAS,SAAT;EAAoB,UAApB;EAAgC;CAA/D,EAAmK;QAEnK;IAAC;MAAU,MAAjB,CAFyK;;MAKrK,WAAW,GAAG;IAAC,MAAD;IAAS,UAAT;IAAqB;GAAvC;;OAEK,MAAM,SAAX,IAAwB,UAAxB,EAAoC;UAC7B,KAAK,GAAG,SAAS,CAAC,KAAV,CAAgB,EAAC,GAAG,WAAJ;MAAiB;KAAjC,CAAd;QACI,KAAK,GAA4B,IAArC;;OAEG;MACF,KAAK,GAAG,KAAK,CAAC,IAAN,CAAW,SAAX,CAAR;;UACI,KAAK,IAAI,IAAb,EAAmB;YACd,QAAQ,GAAG,KAAK,CAAC,CAAD,CAApB;YACI,WAAJ;YACI,MAAM,GAAgD,IAA1D,CAHkB;;YAMd,SAAS,CAAC,MAAV,IAAoB,IAAxB,EAA8B;cACzB,UAAU,CAAC,SAAS,CAAC,MAAX,CAAd,EAAkC;;YAGjC,MAAM,GAAyC,SAAS,CAAC,MAAV,CAAkB,EAChE,GAAG,WAD6D;cAEhE,SAFgE;cAGhE;aAH8C,CAA/C,CAHiC;;gBAU7B,MAAM,IAAI,IAAV,IAAkB,MAAM,CAAC,KAA7B,EAAoC;cACnC,WAAW,GAAG,CAAC,MAAM,IAAI,EAAX,EAAe,KAAf,IAAwB,sCAAtC;;WAXF,MAcO;;kBAGA,cAAc,GAAS,SAAS,CAAC,MAAV,CAAkB,UAAlB,KAAiC,EAA9D;kBACM,cAAc,GAAG,EAAC,GAAG,SAAS,CAAC;aAArC;mBACO,cAAc,CAAC,UAAD,CAArB,CALM;;gBAQF,CAAC,cAAc,CAAC;cAAC,GAAG,EAAE,MAAN;cAAc,cAAc,EAAQ,MAAO,CAAC,MAAR,CAAe,cAAf;aAArC,CAAnB,EAA0F;cACzF,WAAW,GAAG,IAAI,UAAU,yCAA+C,MAAO,CAAC,MAAR,CAAe,cAAf,EACQ,IADR,CACa,IADb,CACkB,GAD7F;aADD,MAGO;cACN,MAAM,GAAG,aAAa,CAAC;gBAAC,GAAG,EAAE,EAAC,GAAG,cAAJ;qBAAuB;iBAA7B;gBAA8C,GAAG,EAAE;eAApD,CAAtB;;;SAjCe;;;YAuCd,WAAW,IAAI,IAAnB,EAAyB;UACxB,QAAQ,GAAG,MAAM,SAAS,CAAC,QAAV,CAAmB,EAAC,GAAG,WAAJ;YAAiB,SAAjB;eAA+B;WAAlD,CAAjB;SADD,MAGO;cACF,CAAC,MAAL,EAAa;YACZ,OAAO,CAAC,GAAR,CAAY,MAAM,CAAC,oCAAoC,SAAS,CAAC,IAAI,cAAc,KAAK,CAAC,CAAD,CAAG,6BAA6B,WAAW,GAAjH,CAAlB;;SA5CgB;;;cAiDZ,KAAK,GAAG,KAAK,CAAC,KAApB;cACM,GAAG,GAAG,KAAK,GAAG,KAAK,CAAC,CAAD,CAAL,CAAS,MAA7B;QACA,SAAS,GAAG,eAAe,CAAC,SAAD,EAAY,QAAZ,EAAsB;UAAC,KAAD;UAAQ;SAA9B,CAA3B,CAnDkB;;QAsDlB,KAAK,CAAC,SAAN,GAAkB,KAAK,GAAG,QAAQ,CAAC,MAAnC;;KAxDF,QA0DS,KAAK,IAAI,IA1DlB;;;SA6DM,SAAP;;;;;;AAMD,AAAO,eAAe,QAAf,CAAyB;EAAC,MAAD;EAAS,UAAT;EAAqB;CAA9C,EAA+H;QAE/H;IAAC,GAAD;IAAM,MAAN;IAAc,SAAd;IAAyB;MAAU,MAAzC,CAFqI;;MAKjI,SAAS,GAAW,EAAxB;;MACI,KAAK,CAAC,OAAN,CAAc,MAAM,CAAC,KAArB,CAAJ,EAAiC;IAChC,SAAS,GAAG,MAAM,CAAC,KAAP,CAAa,IAAb,CAAkB,MAAM,CAAC,SAAzB,CAAZ;GADD,MAGO;UACA,aAAa,GAAG,OAAO,CAAC,MAAM,CAAC,KAAR,CAA7B;;QACI,CAAC,UAAU,CAAC,aAAD,CAAf,EAAgC;MAC/B,OAAO,CAAC,GAAR,CAAY,GAAG,CAAC,iDAAiD,aAAa,oHAAoH,UAAU,SAA7L,CAAf;;;;IAID,SAAS,GAAG,QAAQ,CAAC,aAAD,CAAR,IAA2B,EAAvC;GAhBoI;;;MAoBjI,SAAS,IAAI,IAAjB,EAAuB;UAChB,wBAAwB,GAAG,SAAS,CAAC,GAAV,CAAc,uBAAd,CAAjC,CADsB;;IAItB,UAAU,CAAC,MAAX,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,GAAG,wBAA3B;GAxBoI;;;QA4B/H,MAAM,GAAG,MAAM,cAAc,CAAC;IAAC,MAAD;IAAS,SAAT;IAAoB,UAApB;IAAgC;GAAjC,CAAnC,CA5BqI;;MA+BjI,MAAM,CAAC,UAAX,EAAuB;UAChB,mBAAmB,CAAC,MAAD,CAAzB;GAhCoI;;;MAoCjI,CAAC,GAAL,EAAU;QACL;YACG,SAAS,CAAC;QAAC,MAAM,EAAE,MAAT;QAAiB,OAAO,EAAE;OAA3B,CAAf,CADG;;UAIC,CAAC,MAAL,EAAa;QACZ,OAAO,CAAC,GAAR,CAAY,KAAK,CAAC,2DAA2D,MAAM,IAAlE,CAAjB;;KALF,CAOE,OAAO,GAAP,EAAY;MACb,OAAO,CAAC,GAAR,CAAY,GAAG,CAAC,4CAA4C,MAAM,GAAnD,CAAf,EAAwE,GAAxE;;GATF,MAYO;IACN,OAAO,CAAC,GAAR,CAAY,KAAK,CAAC,6EAAD,CAAjB,EAAkG,KAAK,CAAC,MAAD,CAAvG;;;;;;;;AAQF,AAAO,eAAe,eAAf,CAAgC,OAAhC,EAAgD;QAChD,UAAU,GAAG,OAAO,CAAC,OAAO,CAAC,QAAD,CAAP,IAAqB,OAAO,CAAC,GAAD,CAA5B,IAAqC,iBAAtC,CAA1B;MAEI,MAAM,GAAY,UAAU,CAAC,UAAD,CAAV,IAA0B,aAAhD;EACA,MAAM,GAAG,4BAA4B,CAAC;IAAC;GAAF,CAArC;EACA,MAAM,GAAG,wBAAwB,CAAC;IAAC,MAAD;IAAS;GAAV,CAAjC,CALsD;;EAQtD,MAAM,CAAC,GAAP,GAAa,EAAC,IAAI,WAAW,CAAC,MAAM,CAAC,OAAR,CAAX,IAA+B,EAAnC,CAAD;OAA4C,MAAM,CAAC;GAAhE;QACM,QAAQ,CAAC;IAAC,MAAD;IAAS,UAAT;IAAqB,UAAU,EAAE;GAAlC,CAAd;;;ACxJD;;;;;AAIA,AAAO,eAAe,GAAf,CAAoB,IAApB,EAAkC;EACxCA,SAAA,CACU,GAAG,CAAC,OADd;EAGAC,OAAA,CACU,aADV,EAEE,WAFF,CAEc,iCAFd,EAGE,MAHF,CAGS,uBAHT,EAGkC,2DAA2D,aAAa,CAAC,MAAM,GAHjH,EAGsH,aAAa,CAAC,MAHpI,EAIE,MAJF,CAIU,GAAG,IAAI;IACf,iBAAiB,CAAC,GAAG,CAAC,IAAJ,EAAD,CAAjB,CAA8B,IAA9B;GALF;EAQAA,OAAA,CACU,UADV,EAEE,WAFF,CAEc,0BAFd,EAGE,MAHF,CAGS,oBAHT,EAG+B,gDAAgD,iBAAiB,IAHhG,EAIE,MAJF,CAIS,qBAJT,EAIgC,0CAA0C,aAAa,CAAC,OAAO,IAJ/F,EAKE,MALF,CAKS,oBALT,EAK+B,mDAAmD,aAAa,CAAC,MAAM,IALtG,EAME,MANF,CAMS,mBANT,EAM8B,uCAAuC,aAAa,CAAC,KAAK,IANxF,EAOE,MAPF,CAOS,oBAPT,EAO+B,+DAP/B,EAQE,MARF,CAQS,UART,EAQqB,uHARrB,EASE,MATF,CASS,iBATT,EAS4B,yCAT5B,EAUE,MAVF,CAUS,iBAVT,EAU4B,oEAV5B,EAWE,MAXF,CAWS,iBAXT,EAW4B,iEAX5B,EAYE,MAZF,CAYS,sBAZT,EAYiC,+EAZjC,EAaE,MAbF,CAaS,gBAbT,EAa2B,sEAb3B,EAcE,MAdF,CAcS,sBAdT,EAciC,0GAdjC,EAeE,MAfF,CAeS,iBAfT,EAe4B,0EAf5B,EAgBE,MAhBF,CAgBS,oBAhBT,EAgB+B,yBAhB/B,EAiBE,MAjBF,CAiBS,UAjBT,EAiBqB,+DAjBrB,EAkBE,MAlBF,CAkBS,0BAlBT,EAkBqC,mEAlBrC,EAmBE,MAnBF,CAmBS,iBAnBT,EAmB4B,qDAnB5B,EAoBE,MApBF,CAoBS,gCApBT,EAoB2C,0FAA0F,aAAa,CAAC,kBAAkB,GApBrK,EAqBE,MArBF,CAqBS,gCArBT,EAqB2C,4DArB3C,EAsBE,MAtBF,CAsBS,cAtBT,EAsByB,0EAtBzB,EAuBE,MAvBF,CAuBS,qBAvBT,EAuBgC,oEAvBhC,EAwBE,MAxBF,CAwBS,2BAxBT,EAwBsC,oEAxBtC,EAyBE,MAzBF,CAyBS,yBAzBT,EAyBoC,gDAzBpC,EA0BE,MA1BF,CA0BU,GAAG,IAAI;IACf,eAAe,CAAC,GAAG,CAAC,IAAJ,EAAD,CAAf,CAA4B,IAA5B;GA3BF,EAZwC;;QA2ClC,QAAQ,GAAG,IAAI,CAAC,KAAL,CAAW,CAAX,CAAjB;;MACI,QAAQ,CAAC,MAAT,KAAoB,CAAxB,EAA2B;IAC1BC,IAAA;GA7CuC;;;EAiDxCC,EAAA,CAAW,WAAX,EAAwB,MAAK;IAC5B,OAAO,CAAC,KAAR,CAAc,oBAAoB,QAAQ,CAAC,IAAT,CAAc,GAAd,CAAkB,gDAApD;IACA,OAAO,CAAC,IAAR,CAAa,CAAb;GAFD,EAjDwC;;EAuDxCC,KAAA,CAAc,IAAd;;;AC/DD,GAAG,CAAC,OAAO,CAAC,IAAT,CAAH,CAAkB,KAAlB,CAAwB,CAAC,IAAG;EAC3B,OAAO,CAAC,GAAR,CAAY,CAAZ;EACA,OAAO,CAAC,IAAR,CAAa,CAAC,CAAd;CAFD;;;;"}