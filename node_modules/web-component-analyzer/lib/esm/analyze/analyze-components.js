import * as tsModule from "typescript";
import { CustomElementFlavor } from "./flavors/custom-element/custom-element-flavor";
import { JsDocFlavor } from "./flavors/js-doc/js-doc-flavor";
import { LitElementFlavor } from "./flavors/lit-element/lit-element-flavor";
import { StencilFlavor } from "./flavors/stencil/stencil-flavor";
import { parseComponentDefinitions } from "./parse/parse-definitions";
import { parseGlobalEvents } from "./parse/parse-global-events";
const DEFAULT_FLAVORS = [new LitElementFlavor(), new CustomElementFlavor(), new JsDocFlavor(), new StencilFlavor()];
/**
 * Analyzes all components in a source file.
 * @param sourceFile
 * @param options
 */
export function analyzeComponents(sourceFile, options) {
    const diagnostics = [];
    // Assign defaults
    const flavors = options.flavors || DEFAULT_FLAVORS;
    const ts = options.ts || tsModule;
    const checker = options.checker;
    // Create context
    const context = {
        checker,
        ts,
        config: options.config || {},
        emitDiagnostics(diagnostic) {
            diagnostics.push(diagnostic);
        }
    };
    // Parse all components
    const componentDefinitions = parseComponentDefinitions(sourceFile, flavors, context);
    // Parse all global events
    const globalEvents = parseGlobalEvents(sourceFile, flavors, context);
    return {
        sourceFile,
        globalEvents,
        componentDefinitions,
        diagnostics
    };
}
