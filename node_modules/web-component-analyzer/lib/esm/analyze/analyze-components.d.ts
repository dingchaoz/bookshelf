import * as tsModule from "typescript";
import { SourceFile, TypeChecker } from "typescript";
import { ParseComponentFlavor } from "./flavors/parse-component-flavor";
import { ComponentDefinition } from "./types/component-definition";
import { ComponentDiagnostic } from "./types/component-diagnostic";
import { EventDeclaration } from "./types/event-types";
/**
 * Options to give when analyzing components
 */
export interface AnalyzeComponentsOptions {
    checker: TypeChecker;
    ts?: typeof tsModule;
    flavors?: ParseComponentFlavor[];
    config?: AnalyzeComponentsConfig;
}
/**
 * Configuration to give when analyzing components.
 */
export interface AnalyzeComponentsConfig {
    diagnostics?: boolean;
    analyzeLibDom?: boolean;
    excludedDeclarationNames?: string[];
}
/**
 * The result returned after components have been analyzed.
 */
export interface AnalyzeComponentsResult {
    sourceFile: SourceFile;
    componentDefinitions: ComponentDefinition[];
    globalEvents: EventDeclaration[];
    diagnostics: ComponentDiagnostic[];
}
/**
 * Analyzes all components in a source file.
 * @param sourceFile
 * @param options
 */
export declare function analyzeComponents(sourceFile: SourceFile, options: AnalyzeComponentsOptions): AnalyzeComponentsResult;
//# sourceMappingURL=analyze-components.d.ts.map