import { SimpleTypeKind } from "ts-simple-type";
import { parseJsDocTypeString } from "../../util/js-doc-util";
import { parseJsDocForNode } from "./helper";
/**
 * Parses @fires js doc annotations on interface/class-like nodes.
 * @param node
 * @param context
 */
export function parseDeclarationEvents(node, context) {
    const { ts } = context;
    if (ts.isInterfaceDeclaration(node) || ts.isClassDeclaration(node)) {
        return parseJsDocForNode(node, ["event", "fires", "emits"], (tagNode, parsed) => {
            if (parsed.name != null) {
                return {
                    name: parsed.name,
                    jsDoc: parsed.comment != null ? { comment: parsed.comment } : undefined,
                    type: (parsed.type && parseJsDocTypeString(parsed.type)) || { kind: SimpleTypeKind.ANY },
                    node: tagNode
                };
            }
        }, context);
    }
    return undefined;
}
