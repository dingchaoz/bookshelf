import { toTypeString } from "ts-simple-type";
/**
 * Flattens an array.
 * @param array
 */
export function flatten(array) {
    return array.reduce((acc, a) => [...acc, ...a], []);
}
/**
 * Pretty print the results for debugging.
 * @param results
 * @param checker
 */
export function prepareResultForPrettyPrint(results, checker) {
    return results.map(result => {
        const tags = result.componentDefinitions.map(({ declaration, tagName }) => ({
            fileName: declaration.node.getSourceFile().fileName,
            tagName,
            description: declaration.jsDoc && declaration.jsDoc.comment,
            deprecated: declaration.deprecated,
            members: declaration.members.map(res => (Object.assign(Object.assign({}, res), { type: toTypeString(res.type, checker), node: null }))),
            slots: declaration.slots.map(slot => ({
                name: slot.name,
                description: slot.jsDoc && slot.jsDoc.comment
            })),
            events: declaration.events.map(event => ({
                name: event.name,
                description: event.jsDoc && event.jsDoc.comment
            })),
            cssProperties: declaration.cssProperties.map(cssProperty => ({
                name: cssProperty.name,
                description: cssProperty.jsDoc && cssProperty.jsDoc.comment
            }))
        }));
        const events = result.globalEvents.map(event => event.name);
        return {
            fileName: result.sourceFile.fileName,
            tags,
            events
        };
    });
}
