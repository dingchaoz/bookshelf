import { Diagnostic, Program, SourceFile } from "typescript";
import { AnalyzeComponentsResult } from "../analyze/analyze-components";
import { CompileResult } from "./compile";
import { WcaCliConfig } from "./wca-cli-arguments";
export interface AnalyzeGlobsContext {
    didExpandGlobs?(filePaths: string[]): void;
    willAnalyzeFiles?(filePaths: string[]): void;
    didFindTypescriptDiagnostics?(diagnostics: ReadonlyArray<Diagnostic>, options: {
        program: Program;
    }): void;
    emitAnalyzedFile?(file: SourceFile, result: AnalyzeComponentsResult, options: {
        program: Program;
    }): Promise<void> | void;
}
/**
 * Parses and analyses all globs and calls some callbacks while doing it.
 * @param globs
 * @param config
 * @param context
 */
export declare function analyzeGlobs(globs: string[], config: WcaCliConfig, context?: AnalyzeGlobsContext): Promise<CompileResult & {
    results: AnalyzeComponentsResult[];
}>;
//# sourceMappingURL=analyze-globs.d.ts.map